<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo命令指南</title>
    <url>/post/400a6e47.html</url>
    <content><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-none"><code class="language-none">npm install hexo -g #安装Hexo
npm update hexo -g #升级
hexo init #初始化博客<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>


<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>matery github仓库<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">介绍</a><br>Yafine大佬 Hexo+github搭建<a href="https://yafine-blog.cn/posts/4ab2.html">博客</a>(超级详细版，精细入微)</p>
<h2 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h2><pre class="line-numbers language-none"><code class="language-none">hexo n "我的博客" == hexo new "我的博客" #新建文章
hexo g == hexo generate #生成
hexo s == hexo server #启动服务预览
hexo d == hexo deploy #部署

hexo server #Hexo会监视文件变动并自动更新，无须重启服务器
hexo server -s #静态模式
hexo server -p 5000 #更改端口
hexo server -i 192.168.1.1 #自定义 IP
hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="博客-Font-Master"><a href="#博客-Font-Master" class="headerlink" title="博客 Font Master"></a>博客 Font Master</h2><pre class="line-numbers language-none"><code class="language-none">title: typora-vue-theme主题介绍
date: 2018-09-07 09:25:00
author: 赵奇
img: /source/images/xxx.jpg
top: true
cover: true
coverImg: /images/1.jpg
password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92
toc: false
mathjax: false
summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要
categories: Markdown
tags:
  - Typora
  - Markdown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Hexo优化"><a href="#Hexo优化" class="headerlink" title="Hexo优化"></a>Hexo优化</h2><p>添加valine评论邮箱提醒 <a href="https://deserts.io/valine-admin-document/">链接</a></p>
<p>添加说说  <a href="https://notes.zhangxiaocai.cn/posts/7404e01a.html">链接</a></p>
<p>更多 <a href="https://blog.sky03.cn/posts/42790.html#toc-heading-18">链接</a></p>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>JS基本语法之作用域</title>
    <url>/post/76206bf9.html</url>
    <content><![CDATA[<h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><ul>
<li>JavaScript作用域：就是变量在某个范围内起作用，目的是为了提高程序的</li>
<li>全局作用域 ：整个script标签</li>
<li>局部作用域：在函数内部</li>
</ul>
<h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><blockquote>
<p>类似C/C++ 中的全局变量和局部变量</p>
</blockquote>
<ul>
<li>全局变量： 在全局作用域中的变量<ul>
<li>在函数内未声明的变量也为全局变量      </li>
</ul>
</li>
<li> 局部变量： 在局部作用域下的变量</li>
<li>执行效率：<ul>
<li>全局变量浏览器关闭才会销毁，比较占内存</li>
<li>局部变量在函数结束时才会销毁</li>
</ul>
</li>
<li>JS中没有块级作用域 { }  // if {}   for {]}</li>
</ul>
<h2 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h2><blockquote>
<p>内部函数访问外部函数的变量，采取的是链式查找的方式</p>
</blockquote>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>JS基本语法之函数</title>
    <url>/post/877bf8ef.html</url>
    <content><![CDATA[<h2 id="函数的概念"><a href="#函数的概念" class="headerlink" title="函数的概念"></a>函数的概念</h2><p>函数就是封装了一段可以重复被调用的代码块</p>
<h2 id="函数的使用"><a href="#函数的使用" class="headerlink" title="函数的使用"></a>函数的使用</h2><ul>
<li>函数声明：</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">function () {  //function 为声明函数的关键字  //全部小写
   action;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ul>
<li>函数调用： 函数名()  fun( )</li>
</ul>
<h2 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h2><ul>
<li><p>形参：在声明函数小括号里面的参数是形参</p>
</li>
<li><p>实参：在函数调用小括号里面的参数是实参</p>
</li>
<li><p>实参和形参匹配</p>
<ul>
<li>如果实参个数等于形参个数，输出正常结果</li>
<li>如果实参个数大于形参个数，会取到形参的个数</li>
<li>如果实参个数小于形参个数，多余的参数为NaN</li>
</ul>
</li>
</ul>
<h2 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h2><ul>
<li>如果有return，则返回return后面的值</li>
<li>如果没有return，则返回undefined</li>
</ul>
<h2 id="arguments的使用"><a href="#arguments的使用" class="headerlink" title="arguments的使用"></a>arguments的使用</h2><ul>
<li>arguments存放了传递的所有实参</li>
<li>arguments是一种 == 伪数组 ==<ul>
<li>具有数组的length属性</li>
<li>按照索引的方式进行存储</li>
<li>它没有真实数组的一些方法   //pop</li>
</ul>
</li>
</ul>
<h2 id="函数的两种声明方式"><a href="#函数的两种声明方式" class="headerlink" title="函数的两种声明方式"></a>函数的两种声明方式</h2><ul>
<li><p>利用函数关键字自定义函数</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
<span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>函数表达式</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
<span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// func 是变量名，不是函数名</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>JS基本语法之对象</title>
    <url>/post/686ee723.html</url>
    <content><![CDATA[<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>在JavaScript中，对象是一组无序的相关属性和方法的集合，如字符串，数值，数组，函数等.</p>
<p>对象是由属性和方法组成的</p>
<ul>
<li>属性：对象的特征</li>
<li>方法：事物的行为</li>
</ul>
<h2 id="创建对象的三种方式"><a href="#创建对象的三种方式" class="headerlink" title="创建对象的三种方式"></a>创建对象的三种方式</h2><ol>
<li><p>利用字面量创建对象 { }</p>
<ol>
<li>其中属性或方法采用键值对的形式</li>
<li>多个属性或方法之间用逗号隔开</li>
<li>方法后面跟的是一个匿名函数 </li>
<li>调用对象的属性 对象名.属性名  或  对象名[‘属性名’]</li>
</ol>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>； <span class="token comment">//  创建一个空对象</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> 
	name<span class="token operator">:</span> linxueya<span class="token punctuation">,</span>
	age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sayhi</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hi~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>利用new object() 方法创建属性 </p>
 <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建了一个空的对象</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>利用构造函数创建对象</p>
<p> 构造函数：把对象里面一些相同的属性和方法抽象出来封装导函数里面</p>
 <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>属性 <span class="token operator">=</span> 值；
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">方法</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">new</span> <span class="token class-name">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
</ol>
<h2 id="变量、属性、函数和方法的区别"><a href="#变量、属性、函数和方法的区别" class="headerlink" title="变量、属性、函数和方法的区别"></a>变量、属性、函数和方法的区别</h2><ul>
<li>变量：单独声明赋值，单独存在</li>
<li>属性：对象里面的变量称为属性，不需要声明，用来描述该对象的特征</li>
<li>函数：单独存在的，通过函数名调用</li>
<li>方法：对象里的函数称为方法，方法不需要声明，通过对象名.函数名的方法调用</li>
</ul>
<h2 id="New关键字"><a href="#New关键字" class="headerlink" title="New关键字"></a>New关键字</h2><p>New关键字执行过程</p>
<ol>
<li>New 构造函数可以在内存中创建一个空的对象</li>
<li>this 就会指向刚才创建的空对象</li>
<li>执行构造函数里面的代码，给这个空对象添加属性和方法</li>
<li>返回这个对象</li>
</ol>
<h2 id="遍历对象属性"><a href="#遍历对象属性" class="headerlink" title="遍历对象属性"></a>遍历对象属性</h2><ul>
<li><p>for in 遍历对象</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
	name<span class="token operator">:</span> linxueya<span class="token punctuation">,</span>
	age<span class="token operator">:</span> <span class="token number">18</span>
	sex<span class="token operator">:</span> 男
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出属性名</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obk<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// obj[k] 输出属性值</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
</ul>
<h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><ul>
<li><p>内置对象就是JS语言自带的一些对象，这些对象供开发者使用，并提供了一些基础而必要的方法和属性</p>
</li>
<li><p>如何学习对象中的方法   <a href="https://developer.mozilla.org/zh-CN/">MDN</a></p>
<ol>
<li>查阅该方法的功能</li>
<li>查看里面参数的意义和类型</li>
<li>查看返回值的意义和类型</li>
<li>通过demo进行测试</li>
</ol>
</li>
</ul>
<h2 id="MATH对象"><a href="#MATH对象" class="headerlink" title="MATH对象"></a>MATH对象</h2><p>​    Math 是一个对象不是构造函数</p>
<ul>
<li><p>Math 对象随机数方法 random( )</p>
</li>
<li><p>得到两个数之间的随机整数，并且包含这两个整数</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span>min <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>随机取数</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">arr<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>arr<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>


</li>
</ul>
<h2 id="日期对象"><a href="#日期对象" class="headerlink" title="日期对象"></a>日期对象</h2><p> Date() 是一个构造函数，必须使用new来调用</p>
<ul>
<li>使用 如果没有参数，则返回系统的当前时间</li>
<li>参数常用的写法 数字型 2019,10,1 ；或者是字符串型 ‘2019-10-1 8:8:8’</li>
<li>返回的月份，日期，星期比正常小1  </li>
</ul>
<p>通过Date() 获取总的毫秒数</p>
<ul>
<li>valueOf()  getTime()  +new Date()    Date.now() </li>
</ul>
<h2 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h2><ul>
<li>数组可以通过字面量和new Array() 来创建 </li>
</ul>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建一个空的数组</span>
<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//创建一个长度为2的数组</span>
<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//等价于 [2,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ul>
<li>instanceof / isArray() 运算符 检测是否为数组</li>
</ul>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li><p>添加 删除数组元素的方法</p>
<p>push()  /   pop()</p>
</li>
<li><p>数组翻转 reverse() ;    排序  sort( );  数组索引 indexOf();  数组转换为字符串 toString()  join()   // 分隔符;   数组拼接 concat();    数组截取 slice(begin,end ) 数组删除 splice(第几个开始，删除的个数);</p>
</li>
</ul>
<h2 id="字符串对象"><a href="#字符串对象" class="headerlink" title="字符串对象"></a>字符串对象</h2><p>基本包装类型，就是把简单数据类型包装为复杂数据类型 </p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'andy'</span><span class="token punctuation">;</span>

<span class="token comment">//等价于</span>
<span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">'andy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
str <span class="token operator">=</span> temp<span class="token punctuation">;</span>
temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>字符串的不可变：指的是里面的值不可变，虽然看上去可以改变内容，但其实是地址变量，内存中开辟了一个新的内存空间</p>
<p>字符串相关方法： </p>
<ul>
<li><p>返回字符串索引，indexOf(‘要查找的字符’，[其实的位置]) ; </p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//查找字符串中所有o出现的次数</span>
<span class="token keyword">var</span> index <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'o'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>index <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
	index <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token punctuation">,</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>根据位置返回字符 ，str.charAt(index)   str[index]  // H5 新增;返回指定位置字符的ASCII码   str.charCodeAt(index) ;  </p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 找出字符串中出现最多的字符,统计其出现的次数</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'abcoefoxyozzopp'</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> o<span class="token punctuation">;</span>i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">var</span> chars <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span> o<span class="token punctuation">[</span>chars<span class="token punctuation">]</span><span class="token punctuation">)</span> o<span class="token punctuation">[</span>chars<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token keyword">else</span> o<span class="token punctuation">[</span>chars<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span>  o<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">&gt;</span> max<span class="token punctuation">)</span><span class="token punctuation">{</span>
        max <span class="token operator">=</span> o<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


</li>
<li><p>字符串操作：拼接字符串concat(str1,str2,str3…) 截取字符串  substr(start,length)  ; slice(start,end)     substring(start,end) ；  替换字符串replace(char1 char2);   字符串转换为数组 split(‘分隔符’)   // join   把数组转换为字符串；</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>JS基本语法之预解析</title>
    <url>/post/3df1188b.html</url>
    <content><![CDATA[<h2 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1  num is not defined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2 undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 4  Uncaught TypeError: fn is not a function</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>JS引擎运行JS代码分为两步</p>
<ul>
<li><p>预解析。预解析可以</p>
</li>
<li><p>代码执行</p>
</li>
</ul>
</li>
<li></li>
</ul>
<h2 id="变量预解析和函数预解析"><a href="#变量预解析和函数预解析" class="headerlink" title="变量预解析和函数预解析"></a>变量预解析和函数预解析</h2><ol>
<li>变量预解析,就是把变量声明提到当前函数作用域最前面，不提升复制操作</li>
<li>函数与解析，就是把函数声明提到当前函数作用域最前面，不调用函数</li>
</ol>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token comment">// 相当于执行了以下代码：</span>
<span class="token keyword">var</span> num；
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 相当于执行了以下代码：</span>
<span class="token keyword">var</span> fn；
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><pre class="line-numbers language-none"><code class="language-none">f1();
console.log(c);
console.log(b);
console.log(a);
function f1() {
	var a = b = c = 9;
	console.log(a);
	console.log(b);
	console.log(c);
}
// 输出为 9 9 9 9 9 error<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/post/16107.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new "My New Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>valine添加邮箱提醒</title>
    <url>/post/eadbc16a.html</url>
    <content><![CDATA[<p>Valine 诞生于2017年8月7日，是一款基于LeanCloud的快速、简洁且高效的无后端评论系统。</p>
<p>理论上支持但不限于静态博客，目前已有Hexo、Jekyll、Typecho、Hugo、Ghost 等博客程序在使用Valine。</p>
<div class="note info">本教程基于Hexo，并且默认已完成valine的搭建，本教程基于LeanCloud国际版。另外本教程基于  https://deserts.io/valine-admin-document/</div>

<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>在创建的应用中，打开设置-&gt;云引擎-WEB-&gt;设置-&gt;自定义环境变量；在此处添加环境变量，环境变量的说明参考原<a href="https://deserts.io/valine-admin-document/">教程</a>。所使用的邮箱需要开通SMTP_PASS服务，SMTP_PASS使用授权码。（此处最好不好使用QQ邮箱，题主在使用QQ邮箱时老是报错。）</p>
<p><img src="https://gitee.com/linxueya/pic-bed/raw/master/img/valine.png"></p>
<h2 id="配置云引擎域名"><a href="#配置云引擎域名" class="headerlink" title="配置云引擎域名"></a>配置云引擎域名</h2><p>云引擎域名主要用于评论的后台管理。请把云引擎域和站点域名区分开来。在设置-&gt;域名绑定中添加云引擎域名。同时添加域名解析。</p>
<p>以题注的配置为例，我绑定的域名为comment.linxueya.cn，则DNS的解析为：</p>
<p><img src="https://gitee.com/linxueya/pic-bed/raw/master/img/dns1.png"></p>
<div class="note info">注意不要将此处的主机记录更改为comment.linxueya.cn https://deserts.io/valine-admin-document/</div>


<h2 id="部署云引擎"><a href="#部署云引擎" class="headerlink" title="部署云引擎"></a>部署云引擎</h2><p>切换到 云引擎-&gt;部署，部署模式选择 部署项目-&gt;Git部署，分支「master」，手动部署目标环境为「生产环境」在Leancloud云引擎设置界面，填写代码库并保存：<a href="https://github.com/DesertsP/Valine-Admin.git%EF%BC%8C%E5%8D%B3%E5%8F%AF%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E3%80%82">https://github.com/DesertsP/Valine-Admin.git，即可一键部署。</a></p>
<p><img src="https://cloud.panjunwen.com/2020/10/deploy4.png"></p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ul>
<li>站点评论截图</li>
</ul>
<p><img src="https://gitee.com/linxueya/pic-bed/raw/master/img/valine-show1.png"></p>
<ul>
<li>邮箱提醒</li>
</ul>
<p><img src="https://gitee.com/linxueya/pic-bed/raw/master/img/valine-show2.png"></p>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>评论管理、定时任务和邮箱模板 等设置均基于 <a href="https://deserts.io/valine-admin-document/">原教程</a></p>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>鲸鱼</title>
    <url>/post/ab725d99.html</url>
    <content><![CDATA[<h2 id="2021辽宁春晚"><a href="#2021辽宁春晚" class="headerlink" title="2021辽宁春晚"></a>2021辽宁春晚</h2><main class="content">
    <div class="container">
        <div class="card">
            <div class="card-content">
                <div style="position: relative; padding: 30% 45%;"> 
                    <iframe style=" position: absolute;
                        width: 100%; 
                        height: 100%; 
                        left: 0;
                        top: 0;" src="//player.bilibili.com/player.html?aid=204129921&amp;bvid=BV1kh411C7EE&amp;cid=296074833&amp;page=2&amp;high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> 
                        </iframe>
                </div>
            </div>
        </div>
    </div>
</main>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>star</tag>
      </tags>
  </entry>
  <entry>
    <title>Web APIs</title>
    <url>/post/c0110283.html</url>
    <content><![CDATA[<ul>
<li><p><input disabled="" type="checkbox">  能够说出什么是DOM</p>
</li>
<li><p><input disabled="" type="checkbox">  能够获取页面元素</p>
</li>
<li><p><input disabled="" type="checkbox">  能够元素注册事件</p>
</li>
<li><p><input disabled="" type="checkbox">  能够操作DOM元素的属性</p>
</li>
<li><p><input disabled="" type="checkbox">  能够创建元素</p>
</li>
<li><p><input disabled="" type="checkbox">  能够操作DOM节点</p>
</li>
</ul>
<p>API是我们程序员提供的一个接口，帮助我们实现某种功能，但我们不必纠结其内部实现。而Web API主要是针对于浏览器提供的接口，主要用于浏览器实现交互效果。</p>
<h2 id="DOM简介"><a href="#DOM简介" class="headerlink" title="DOM简介"></a>DOM简介</h2><p>文档对象模型是W3C组织推荐的处理HTML的标准编程接口。</p>
<p>W3C已经定义了一些DOM接口，通过这些DOM接口可以改变网页的内容样式和结构</p>
<p><img src="https://cdn.linxueya.cn/img/20210220155327.png"></p>
<p>文档：一个页面就是一个文档，DOM中使用document表示</p>
<p>元素：页面中所有的标签都是元素，DOM中使用element表示</p>
<p>节点：网页中所有的内容都是节点（标签，属性，文本，注释等），DOM中使用node表示</p>
<h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><ul>
<li><p>根据ID获取：getElementById()</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>2021<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> timer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

</li>
<li><p>根据标签名获取 getElementsByTagName()</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>hello,world!1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>hello,world!2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>hello,world!3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// 返回的是一个对象的集合，得到的元素是动态的</span>
        <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 当存在多个标签时u，可以结合ID来选择 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>hello,world!1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>hello,world!2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>hello,world!3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>how are you 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>how are you 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>how are you 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> nav <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'nav'</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> lis <span class="token operator">=</span> nav<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

</li>
<li><p>通过==HTML5==新增的方法获取 </p>
<ol>
<li>getElementsByClassName 根据类名获取元素</li>
<li>querySelector 返回选择器的第一个元素对象</li>
<li>querySelectorAll  返回选择器所有的元素对象</li>
</ol>
</li>
<li><p>特殊元素获取</p>
<ol>
<li>获取html元素，body元素</li>
</ol>
</li>
</ul>
<h2 id="事件基础"><a href="#事件基础" class="headerlink" title="事件基础"></a>事件基础</h2><p>事件概述：JavaScript使我们有能力创建动态页面。</p>
<p>事件由三部分组成，事件源、 事件类型和事件处理程序</p>
<ul>
<li>事件源： 事件触发的对象 </li>
<li>事件类型： 如何触发 什么事件 比如鼠标点击</li>
<li>事件处理程序：通过函数赋值的程序 完成</li>
</ul>
<p><img src="https://cdn.linxueya.cn/img/shijain-mouse.png"></p>
<p>执行事件步骤</p>
<ul>
<li>获取事件源</li>
<li>绑定事件 注册事件 </li>
<li>添加事件处理程序</li>
</ul>
<h2 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h2><h3 id="改变元素内容：-element-innerText-和-element-innerHTML（W3C标准-保留换行和空格）"><a href="#改变元素内容：-element-innerText-和-element-innerHTML（W3C标准-保留换行和空格）" class="headerlink" title="改变元素内容： element.innerText 和 element.innerHTML（W3C标准 保留换行和空格）"></a>改变元素内容： element.innerText 和 element.innerHTML（W3C标准 保留换行和空格）</h3><p>案例：通过鼠标点击获取时间  </p>
<p>案例效果：<a href="https://cdn.linxueya.cn/code/web/web-api/1.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取时间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>out<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> y <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> m <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> d <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> h <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> min <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> s <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> text <span class="token operator">=</span> y<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>m<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>d<span class="token operator">+</span><span class="token string">' '</span><span class="token operator">+</span>h<span class="token operator">+</span><span class="token string">':'</span><span class="token operator">+</span>min<span class="token operator">+</span><span class="token string">':'</span><span class="token operator">+</span>s<span class="token punctuation">;</span>
    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> out <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'out'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        out<span class="token punctuation">.</span>innerText <span class="token operator">=</span> text<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h3 id="改变常见元素属性：src、href、-id、alt和title"><a href="#改变常见元素属性：src、href、-id、alt和title" class="headerlink" title="改变常见元素属性：src、href、 id、alt和title"></a>改变常见元素属性：src、href、 id、alt和title</h3><p>案例：分时显示不同图片， 不同问候语 。 </p>
<p>案例效果: <a href="https://cdn.linxueya.cn/code/web/web-api/2.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/s.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>img<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getHours<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>h <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'./images/s.gif'</span><span class="token punctuation">;</span>
        text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'上午好'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>h <span class="token operator">&lt;</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'./images/z.gif'</span><span class="token punctuation">;</span>
        text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'中午好'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'./images/w.gif'</span><span class="token punctuation">;</span>
        text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'晚上好'</span><span class="token punctuation">;</span>
        
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h3 id="改变-表单-的属性：type、value、checked、selected、disabled"><a href="#改变-表单-的属性：type、value、checked、selected、disabled" class="headerlink" title="改变==表单==的属性：type、value、checked、selected、disabled"></a>改变==表单==的属性：type、value、checked、selected、disabled</h3><p>案例：查看明文密码  </p>
<p>案例效果: <a href="https://cdn.linxueya.cn/code/web/web-api/3.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/close.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">'</span>eye<span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">'</span>pwd<span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> eye <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'eye'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> pwd <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'pwd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    eye<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            pwd<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">;</span>
            eye<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'./images/open.png'</span><span class="token punctuation">;</span>
            flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span><span class="token punctuation">{</span>
            pwd<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'password'</span><span class="token punctuation">;</span>
            eye<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'./images/close.png'</span><span class="token punctuation">;</span>
            flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h3 id="改变元素的大小、颜色、位置等"><a href="#改变元素的大小、颜色、位置等" class="headerlink" title="改变元素的大小、颜色、位置等"></a>改变元素的大小、颜色、位置等</h3><div class="note info">JS修改style样式操作,产生的是行内样式，权重比较高</div>

<ul>
<li>element.style  样式比较少或功能比较少的情况下适用</li>
<li>element.className  </li>
<li>如果想保留原先的类名，可以使用多类名选择器 </li>
</ul>
<p>案例：关闭淘宝二维码 </p>
<p>案例效果: <a href="https://cdn.linxueya.cn/code/web/web-api/4.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    淘宝二维码
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/tao.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>x<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    btn<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        box<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>案例：密码框格式提示错误信息 </p>
<p>案例效果: <a href="https://cdn.linxueya.cn/code/web/web-api/5.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>mess<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>请输入6-12位密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.mess'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    btn<span class="token punctuation">.</span><span class="token function-variable function">onblur</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> len <span class="token operator">=</span> btn<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">&lt;</span> <span class="token number">6</span> <span class="token operator">||</span> len <span class="token operator">&gt;</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">"mess wrong"</span><span class="token punctuation">;</span>
            p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'您输入的位数不对要求6~16位'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span><span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">"mess right"</span><span class="token punctuation">;</span>
            p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'输入正确'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="排它思想"><a href="#排它思想" class="headerlink" title="排它思想"></a>排它思想</h3><p>案例：百度换肤</p>
<p>案例：全选与取消</p>
<p>获取属性值</p>
<ul>
<li>element.属性   //内置属性</li>
<li>element.getAttribute(‘属性 ‘)  //程序员自定义属性 </li>
</ul>
<p>设置属性值</p>
<ul>
<li>element.属性 = 值</li>
<li>element.setAttribute(‘属性’， ‘值’) </li>
</ul>
<p>移除属性</p>
<ul>
<li>element.removeAttribute(‘属性 ‘) </li>
</ul>
<p>案例：tab栏切换 （重点）</p>
<p>H5自定义属性 ==data-属性== ，dataset存放着所有以data-开头的数据，dataset[‘属性’] 或者 dataset.属性 （ie11 以上）</p>
<h2 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h2><p><del>利用DOM提供的方法获取元素逻辑性不清，繁琐</del></p>
<p>网页中所有的内容都是节点（标签，属性，文本，注释），在DOM中，节点使用node来表示。一般地，节点至少拥有节点类型，节点名称，节点值这三个属性。</p>
<p>子节点</p>
<ul>
<li>获取所有子节点   node.childNodes</li>
<li>获取子元素节点   node.children</li>
<li>第一个节点   node.firstChild  </li>
<li>第一个元素节点  node.firstElenmentChild （ie9 以上）</li>
<li>第一个元素节点(开发中使用) node.children[0]</li>
</ul>
<p>案例：下拉菜单</p>
<p>兄弟节点</p>
<ul>
<li><p>下一个兄弟节点   node.nextSibling</p>
</li>
<li><p>下一个兄弟元素节点  node.nextElementSibling</p>
</li>
</ul>
<p>创建元素节点  document.createElement( )</p>
<p>添加节点  node.append( )   or   node.insertBefore(child,指定元素)</p>
<p>案例： 简易发布留言</p>
<p>删除节点  node.removeChild()</p>
<p>案例：删除留言</p>
<p>复制接点  node.cloneNode() 如果括号为空或者为false，则为浅拷贝，只复制标签不复制内容；如果为true，则为深拷贝 </p>
<p>案例：动态生成表格</p>
<p>三种动态创建元素方式的区别</p>
<ul>
<li>document.write()  如果页面文档加载完毕，会重绘页面</li>
<li>document.innerHTML   通过拼接插入多个元素   效率低   通过数组插入元素 效率高</li>
<li>document.createElement  效率较高  结构清晰</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML5+CCS3</title>
    <url>/post/47f7d4a9.html</url>
    <content><![CDATA[<h2 id="新增语义化标签"><a href="#新增语义化标签" class="headerlink" title="新增语义化标签"></a>新增语义化标签</h2><ul>
<li>header 头部标签</li>
<li>nav 导航标签</li>
<li>article 内容标签</li>
<li>section 块级标签</li>
<li>aside 侧标栏标签</li>
<li>footer 尾部标签</li>
</ul>
<p>*pc端存在兼容问题，HTML5主要应用在移动端</p>
<h2 id="H5新增多媒体标签"><a href="#H5新增多媒体标签" class="headerlink" title="H5新增多媒体标签"></a>H5新增多媒体标签</h2><ul>
<li>音频 &lt;audio<ul>
<li>音频格式 ogg,MPEG 3,wav </li>
<li>常见属性：controls, autoplay,loop,src</li>
</ul>
</li>
<li>视频 &lt;video<ul>
<li>视频格式 ogg, MPEG 4,web</li>
<li>在谷歌浏览器中添加静音属性来自动播放</li>
</ul>
</li>
</ul>
<h2 id="新增表单标签"><a href="#新增表单标签" class="headerlink" title="新增表单标签"></a>新增表单标签</h2><ul>
<li>input <ul>
<li>email,url,date,time,month,week,number,tel,search,color</li>
</ul>
</li>
<li>属性<ul>
<li>==placeholder==，占位符</li>
<li>autofocus，自动聚焦，鼠标定位到输入框</li>
<li>==multiple==，多分件提交</li>
<li>autocomplete，保留输入历史纪录</li>
</ul>
</li>
</ul>
<h1 id="CCS3"><a href="#CCS3" class="headerlink" title="CCS3"></a>CCS3</h1><h2 id="CCS3属性选择器"><a href="#CCS3属性选择器" class="headerlink" title="CCS3属性选择器"></a>CCS3属性选择器</h2><ul>
<li>E[attr] 选择具有att属性的E元素<ul>
<li>button[disable] 选择的既有button属性又有disable属性</li>
</ul>
</li>
<li>==类选择器、属性选择器、伪类选择器权重为10==</li>
<li>E[att=”val”] 选择具有att属性，且属性值等于val的E元素</li>
<li>E[att^=”val”] 选择具有att属性，且属性值以val开头的E元素</li>
<li>E[att$=”val”] 选择具有att属性，且属性值以val结尾的E元素</li>
<li>E[att*=”val”] 选择具有att属性，且属性值中含有val的E元素</li>
</ul>
<h2 id="CCS3结构伪类选择器"><a href="#CCS3结构伪类选择器" class="headerlink" title="CCS3结构伪类选择器"></a>CCS3结构伪类选择器</h2><ul>
<li>E:first-child 匹配父元素中的第一个子元素E</li>
<li>E:nth-child(n) 匹配父元素中的第n个子元素E<ul>
<li>==n可以是数字、关键字或者公式==</li>
<li>常见关键字 even偶数，odd奇数</li>
<li>如果n是公式，则从零开始计算</li>
</ul>
</li>
</ul>
<h2 id="CCS-3伪元素选择器（两个冒号）"><a href="#CCS-3伪元素选择器（两个冒号）" class="headerlink" title="CCS 3伪元素选择器（两个冒号）"></a>CCS 3伪元素选择器（两个冒号）</h2><ul>
<li>::before(清除浮动)在元素内部前面插入内容</li>
<li>::after 在元素内部后面插入内容<ul>
<li>before和after必须有content属性</li>
<li>创建的元素属于行内元素</li>
<li>在dom看不见创建的元素，所以被称作伪元素</li>
<li>==伪元素和标签选择器一样，权重为1==</li>
</ul>
</li>
</ul>
<h2 id="CCS3-2D转换"><a href="#CCS3-2D转换" class="headerlink" title="CCS3 2D转换"></a>CCS3 2D转换</h2><h4 id="2D转换之移动"><a href="#2D转换之移动" class="headerlink" title="2D转换之移动"></a>2D转换之移动</h4><ul>
<li>transform:translate(x,y) 参数可以是像素值，也可以是百分比，如果里面的参数是%，移动的距离是盒子自身的宽度或者高度</li>
<li>==之前使用position定位时，用margin-top居中，在CCS3中可以直接使用top和translate(-50%,50%)组合==</li>
</ul>
<h4 id="2D转换之旋转"><a href="#2D转换之旋转" class="headerlink" title="2D转换之旋转"></a>2D转换之旋转</h4><ul>
<li>transform:routate(n==deg==)</li>
<li>案列：鼠标悬浮图片旋转，在hover中写旋转，在本身写过渡   ==过渡写在本身上，谁做动画给谁加==</li>
<li>案例：三角形，保留盒子的两条边，再将盒子旋转</li>
</ul>
<h4 id="2D转换中心点"><a href="#2D转换中心点" class="headerlink" title="2D转换中心点"></a>2D转换中心点</h4><ul>
<li>transform-origion:x y;<ul>
<li>x y默认转换的中心点是元素的中心点</li>
<li>还可以设置像素或者方位名词（top，bottom等）</li>
</ul>
</li>
<li>案例：旋转（鼠标悬浮，切换盒子）</li>
</ul>
<h4 id="2D转换之缩放"><a href="#2D转换之缩放" class="headerlink" title="2D转换之缩放"></a>2D转换之缩放</h4><ul>
<li>transform:scale(x,y) 里面的数字是倍数的意思<ul>
<li>直接修改高度和宽度，==会影响其他盒子==</li>
<li>scale能设置缩放中心点，向四周扩散</li>
</ul>
</li>
<li>案例：图片放大（鼠标悬浮，图片放大）</li>
<li>案列：分页按钮</li>
</ul>
<h4 id="2D转换综合写法"><a href="#2D转换综合写法" class="headerlink" title="2D转换综合写法"></a>2D转换综合写法</h4><ul>
<li>同时使用多个转换，其格式为transform:translate() rotate() scale()</li>
<li>其顺序会影响转换的效果（先旋转会改变坐标轴方向）</li>
<li>==当我们同时有位移和其他属性时，位移放在最前面==</li>
</ul>
<h2 id="CCS3动画"><a href="#CCS3动画" class="headerlink" title="CCS3动画"></a>CCS3动画</h2><blockquote>
<p>相比于过渡，动画可以实现更多变化，更多控制，连续播放等效果</p>
</blockquote>
<ul>
<li><p>from和to等价于 0%和100%</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">@keyframe 动画名称 { 
    0% { 表示第0帧
        
    }
    100% {
        
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>animation 属性</p>
<ul>
<li>animation-name 动画名称</li>
<li>animation-duration 完成时间</li>
<li></li>
</ul>
</li>
<li><p>animation 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束的状态</p>
</li>
<li><p>运动曲线细节</p>
<ul>
<li>linear 动画从头到尾运动的速度是相同的</li>
<li>ease 动画开始慢，中间快，后来慢</li>
<li>step(s) 指定动画分几步完成</li>
</ul>
</li>
<li><p>案例 hotmap</p>
</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">body</span> <span class="token punctuation">{</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token selector">.map</span> <span class="token punctuation">{</span>
            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 747px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 616px<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./img/map.png<span class="token punctuation">)</span></span> no-repeat<span class="token punctuation">;</span>

            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token selector">.city</span> <span class="token punctuation">{</span>
            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
            <span class="token property">top</span><span class="token punctuation">:</span> 226px<span class="token punctuation">;</span>
            <span class="token property">right</span><span class="token punctuation">:</span> 193px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token selector">.dotted</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> #9ff<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token selector">.city div[class^="pop"]</span> <span class="token punctuation">{</span>
            <span class="token comment">/* 保证我们小波纹在父盒子里面水平垂直居中 放大之后就会中心向四周发散 */</span>
            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
            <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
            <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 12px #9f9ffd<span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
            <span class="token comment">/* animation: name duration timing-function delay iteration-count direction fill-mode; */</span>
            <span class="token comment">/* animation: pop 1.5s linear infinite; */</span>
        <span class="token punctuation">}</span>
        <span class="token selector">.city div.pop2</span> <span class="token punctuation">{</span>
            <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.4s<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token selector">.city div.pop3</span> <span class="token punctuation">{</span>
            <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.8s<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token atrule"><span class="token rule">@keyframes</span> pop</span><span class="token punctuation">{</span>
            <span class="token selector">0%</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
            <span class="token selector">70%</span> <span class="token punctuation">{</span>
                <span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
                <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
                <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token selector">100%</span> <span class="token punctuation">{</span>
                <span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>
                <span class="token property">height</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>
                <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dotted<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pop1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pop2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pop3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="CCS3-3D转换"><a href="#CCS3-3D转换" class="headerlink" title="CCS3  3D转换"></a>CCS3  3D转换</h2><ul>
<li><p>特点：近大远小</p>
</li>
<li><p>3D位移: translate3d(x,y,z)</p>
<ul>
<li>translateZ沿着Z轴移动，单位为px </li>
</ul>
</li>
<li><p>3D旋转: rotate3d(x,y,z)</p>
</li>
<li><p>透视: perspective</p>
<ul>
<li>==透视写在被观察元素的父盒子上面== </li>
<li><img src="https://gitee.com/linxueya/pic-bed/raw/master/img/20210117200401.png"></li>
<li>d表示眼睛距离屏幕的距离，z表示物体距离屏幕的距离</li>
</ul>
</li>
<li><p>3D呈现 transform-style</p>
<ul>
<li>控制子元素以3D空间显示</li>
<li>transform-style:preserve-3d</li>
</ul>
</li>
<li><p>案例：两面翻转的盒子</p>
<ul>
<li><p>box为翻转的盒子，front为前面的盒子，back为后面的盒子。</p>
</li>
<li><p>ccs样式</p>
<ul>
<li>box指定大小，切记要添加3D呈现</li>
<li>back盒子要沿着y轴翻转180deg</li>
<li>最后鼠标经过，box沿着y轴旋转180deg</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>front<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>back<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
<li><p>案例：3D导航栏</p>
</li>
<li><p>案例：旋转木马</p>
</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>CCS</tag>
      </tags>
  </entry>
  <entry>
    <title>Web-APIs2</title>
    <url>/post/d23a6e4b.html</url>
    <content><![CDATA[<ul>
<li><p><input disabled="" type="checkbox">  能够写出元素注册事件的两种方式</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出删除事件的两种方式</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出DOM事件流的三个阶段</p>
</li>
<li><p><input disabled="" type="checkbox">  能够利用事件对象完成跟随鼠标案例</p>
</li>
<li><p><input disabled="" type="checkbox">  能够封装阻止冒泡的兼容性函数</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出事件委托的原理</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出常用的鼠标和键盘事件</p>
</li>
</ul>
<h2 id="注册事件（绑定事件）"><a href="#注册事件（绑定事件）" class="headerlink" title="注册事件（绑定事件）"></a>注册事件（绑定事件）</h2><p>传统注册方式：同一个元素同一个时间只能设置一个处理函数，最后的注册的处理函数会覆盖前面注册的处理函数。</p>
<p>方法监听注册事件：W3C推荐方式，addEventListener (‘事件’，函数名)。同一个事件 同一个元素可以添加多个事件处理程序。//attachEvent   (IE9 之前)</p>
<h2 id="删除事件"><a href="#删除事件" class="headerlink" title="删除事件"></a>删除事件</h2><p>应用：事件处理函数只触发一次</p>
<p>传统方式：node.事件 = null</p>
<p>移除监听事件： removeEventListener (‘事件’，函数名)   //detachEvent   (IE9 之前)</p>
<h2 id="DOM事件流"><a href="#DOM事件流" class="headerlink" title="DOM事件流"></a>DOM事件流</h2><p>事件流描述的时从页面接收事件的顺序。事件发生时会在元素节点之间按照特定的顺序传播，这个传播的过程即DOM事件流。</p>
<p><img src="https://cdn.linxueya.cn/img/shijian-flow.png"></p>
<p>DOM事件流分为三个阶段：1.捕获阶段   2.当前目标阶段   3.冒泡阶段</p>
<ul>
<li>捕获阶段：father -&gt; son</li>
<li>冒泡阶段:  son -&gt; father   (实际开发中使用多)</li>
</ul>
<p><code>JS代码中只能执行捕获或者冒泡阶段</code></p>
<p><code>onclick 和 attachEvent 只能得到冒泡事件</code></p>
<p><code>addEventListener 第三个参数为true 时使用捕获，为 false时使用冒泡</code></p>
<h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><p>div.onclick = function(event){}   </p>
<p>div.addEventListener(‘click’,fn(event))</p>
<p>event  就是一个事件对象，可以当做形参来看。它是系统创建的，不需要我们传递参数。事件对象是一系列相关数据的集合。</p>
<p>兼容性问题： IE678  通过window.event   e = e || window.event</p>
<p>事件对象常用属性</p>
<p><img src="https://cdn.linxueya.cn/img/shijian-obj.png"></p>
<ul>
<li><p>e.target  返回触发事件的对象   //兼容性    var target = e.target   || e.srcElement</p>
</li>
<li><p>this 返回绑定元素的对象</p>
</li>
</ul>
<h2 id="阻止事件冒泡"><a href="#阻止事件冒泡" class="headerlink" title="阻止事件冒泡"></a>阻止事件冒泡</h2><p>事件冒泡的特性，会带来好处，也会带来坏处，需要我们灵活掌握。</p>
<p>标准写法：利用事件对象里面的stopPropagation()</p>
<p>兼容性：cancelBubble  //IE 6-8</p>
<h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p>不将每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响每一个子节点。</p>
<p>案例：将点击事件委托为父节点</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>子节点1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>子节点2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>子节点3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>子节点4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>子节点5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ul<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="常用鼠标事件"><a href="#常用鼠标事件" class="headerlink" title="常用鼠标事件"></a>常用鼠标事件</h2><p>禁用右键：contextmenu</p>
<p>禁止选中 ：selectstart</p>
<p><img src="https://cdn.linxueya.cn/img/shijian-mouse1.png"></p>
<p>案例：图片跟随鼠标移动   </p>
<p>案例效果：<a href="https://cdn.linxueya.cn/code/web/event/1.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/angel.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">;</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span>  e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> x <span class="token operator">-</span> <span class="token number">40</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> y <span class="token operator">-</span> <span class="token number">40</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="常用键盘事件"><a href="#常用键盘事件" class="headerlink" title="常用键盘事件"></a>常用键盘事件</h2><p>onkeyup   键盘弹起</p>
<p>onkeydown   键盘按下</p>
<p>onkeypress    键盘按压  // 不识别功能键  但是KeyCode属性能区分大小写</p>
<p>执行顺序：down -&gt; press -&gt; up</p>
<p>案例：文字放大镜</p>
<p>案例效果：<a href="https://cdn.linxueya.cn/code/web/event/2.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hide<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> t <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> h <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.hide'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            h<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
            h<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> t<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 当我们失去焦点，就隐藏这个con盒子</span>
    t<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'blur'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 当我们获得焦点，就显示这个con盒子</span>
    t<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'focus'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">!==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<div class="note info">keydown 和 keypress 两个事件触发的时候，文字还没有落入文本框中。而且使用功能键时，keypress不响应</div>

]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>Web-APIs3</title>
    <url>/post/a53d5edd.html</url>
    <content><![CDATA[<ul>
<li><p><input disabled="" type="checkbox">  能够说出什么是BOM</p>
</li>
<li><p><input disabled="" type="checkbox">  能够知道浏览器的顶级对象window</p>
</li>
<li><p><input disabled="" type="checkbox">  能够写出页面加载事件及注意事项</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出JS的执行机制</p>
</li>
<li><p><input disabled="" type="checkbox">  能够使用location 对象完成页面之间的跳转</p>
</li>
<li><p><input disabled="" type="checkbox">  能够知晓navigator 对象涉及的属性</p>
</li>
<li><p><input disabled="" type="checkbox">  能够使用history提供的方法实现页面刷新</p>
</li>
</ul>
<h2 id="BOM概述"><a href="#BOM概述" class="headerlink" title="BOM概述"></a>BOM概述</h2><p>BOM即浏览器对象模型，它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是window。BOM由一系列相关的对象构成，并且每个对象都提供了很多方法和属性。</p>
<p><img src="https://cdn.linxueya.cn/img/BOM-dif.png"></p>
<p><img src="https://cdn.linxueya.cn/img/BOM-desc.png"></p>
<p>window是浏览器的顶级对象，它具有双重角色。1. 它是JS访问浏览器窗口的一个接口。2. 它是一个全局对象。定义在全局作用域中的变量，函数都会变成window对象的属性和方法</p>
<p>window的一个特殊属性 window.name</p>
<h2 id="window对象的常见事件"><a href="#window对象的常见事件" class="headerlink" title="window对象的常见事件"></a>window对象的常见事件</h2><h3 id="窗口加载事件"><a href="#窗口加载事件" class="headerlink" title="窗口加载事件"></a>窗口加载事件</h3><p>window.onload 当文档完全加载完成才会触发事件</p>
<p>window.onload 传统注册事件方式只能写一次，如果有多个，会以最后一个为准</p>
<p>window.addEventListener(‘DOMContentLoaded’,function(){}) ,仅当DOM加载完毕，不包括样式表，图片，flash等 （避免图片多加载慢）</p>
<h3 id="调整窗口大小事件"><a href="#调整窗口大小事件" class="headerlink" title="调整窗口大小事件"></a>调整窗口大小事件</h3><p>window.onresize = func(){}</p>
<p>window.addEventListener(“resize”,function(){})</p>
<h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><ul>
<li><p>setTimeout(调用函数，[延迟的毫秒数])   //该定时器在定时时间到后执行调用函数  </p>
<p>其它写法 :</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>time<span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'fn()'</span><span class="token punctuation">,</span>time<span class="token punctuation">)</span>  <span class="token comment">//不提倡</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>定时器可能有很多，我们需要给定时器起一个名字。</p>
<p>案例： 5s后自动关闭的广告</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/ad.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>清除setTimeout定时器  clearTimeout(timerID)</p>
</li>
<li><p>setInterval(调用函数，[延迟的毫秒数])   //该定时器每隔固定时间就会去调用回调函数</p>
<p>案例：倒计时   </p>
<p>案例效果: <a href="https://cdn.linxueya.cn/code/web/BOM/1.html">GO</a></p>
<!--解决定时器启动前的空白-->

<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hour<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>minute<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>second<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// 1. 获取元素 </span>
    <span class="token keyword">var</span> hour <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.hour'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 小时的黑色盒子</span>
    <span class="token keyword">var</span> minute <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.minute'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 分钟的黑色盒子</span>
    <span class="token keyword">var</span> second <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.second'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 秒数的黑色盒子</span>
    <span class="token keyword">var</span> inputTime <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2022-1-1 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回的是用户输入时间总的毫秒数</span>
    <span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 我们先调用一次这个函数，防止第一次刷新页面有空白 </span>
    <span class="token comment">// 2. 开启定时器</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span>countDown<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> nowTime <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回的是当前时间总的毫秒数</span>
        <span class="token keyword">var</span> times <span class="token operator">=</span> <span class="token punctuation">(</span>inputTime <span class="token operator">-</span> nowTime<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// times是剩余时间总的秒数 </span>
        <span class="token keyword">var</span> h <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>times <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">%</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//时</span>
        h <span class="token operator">=</span> h <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> h <span class="token operator">:</span> h<span class="token punctuation">;</span>
        hour<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> h<span class="token punctuation">;</span> <span class="token comment">// 把剩余的小时给 小时黑色盒子</span>
        <span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>times <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 分</span>
        m <span class="token operator">=</span> m <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> m <span class="token operator">:</span> m<span class="token punctuation">;</span>
        minute<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>times <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当前的秒</span>
        s <span class="token operator">=</span> s <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> s <span class="token operator">:</span> s<span class="token punctuation">;</span>
        second<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>清除setInterval定时器  clearInterval(timerID)</p>
<p>案例：发送验证码   </p>
<p>案例效果： <a href="https://cdn.linxueya.cn/code/web/BOM/2.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入验证码<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">autofocus</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>autofocus<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>发送验证码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> sp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        btn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token string">'disabled'</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> timer1 <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>time <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                btn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                time <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                sp<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> time <span class="token operator">+</span> <span class="token string">"s 后重新发送"</span><span class="token punctuation">;</span>
                time<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



</li>
</ul>
<h2 id="JS执行机制"><a href="#JS执行机制" class="headerlink" title="JS执行机制"></a>JS执行机制</h2><p>JS语言为单线程</p>
<ul>
<li>同步：前一个任务结束后再执行后一个任务，程序的执行顺序与任务的排列顺序是一致的</li>
<li>异步：在处理一个任务时还可以处理其他任务</li>
<li>同步任务： 同步任务都在主线程上执行，形成一个执行栈</li>
<li>异步任务：JS的异步是通过回调函数实现的，一般而言，异步任务有以下三种类型。1. 普通事件 click resize 2. 资源加载load  error  3. 定时器 包括setInterval   setTimeout</li>
<li>异步进程</li>
</ul>
<p><img src="https://cdn.linxueya.cn/img/BOM-loop.png"></p>
<p>主线程不断的重复获取任务，执行任务，这种机制被称为事件循环。</p>
<h2 id="location-对象"><a href="#location-对象" class="headerlink" title="location 对象"></a>location 对象</h2><p>window对象给我们提供了一个location属性用于获取或设置窗体的URL，并且可以用于解析URL。</p>
<p>URL是互联网上标准资源的地址，互联网上的每个文件都有唯一的URL，他包含的信息指出文件的位置以及浏览器应该怎么处理它。</p>
<p>常用属性 location.href   location.hash</p>
<p><img src="https://cdn.linxueya.cn/img/BOM-location1.png"></p>
<p>案例：跳转页面    </p>
<p>案例效果：<a href="https://cdn.linxueya.cn/code/web/BOM/3.html">GO</a></p>
<!--点击跳转和倒计时跳转-->

<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>点击跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'index.html'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 定时跳转</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'index.html'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>获取URL参数数据</p>
<p><img src="https://cdn.linxueya.cn/img/BOM-url.png"></p>
<p>案例：不同的页面传递参数   </p>
<p>案例效果：<a href="https://cdn.linxueya.cn/code/web/BOM/4.html">GO</a></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">// 跳转前页面
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./index.html<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

//  跳转后页面
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    hello 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> location<span class="token punctuation">.</span>search<span class="token punctuation">;</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> s <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 此页面用于 点击跳转和URL参数传递</span>
    <span class="token comment">// 此处通过判断对象类型决定是否插入</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">==</span> Object<span class="token punctuation">)</span><span class="token punctuation">{</span>  
        div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">' hello'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>location对象的方法</p>
<ul>
<li>location.assign()    跳转页面   重定向</li>
<li>location.replace()   替换当前页面,不记录历史</li>
<li>location.reload()   重新加载页面   相当于刷新按钮   如果参数为true,则为强制刷新</li>
</ul>
<h2 id="navigator-对象"><a href="#navigator-对象" class="headerlink" title="navigator 对象"></a>navigator 对象</h2><p>navigator 对象包含有关浏览器的信息,我们最常用的是userAgent,该属性可以返回由客户端发送的user-agent头部的值。 // 可以通过这个属性判断客户端使用的是 移动端还是 PC</p>
<h2 id="history-对象"><a href="#history-对象" class="headerlink" title="history 对象"></a>history 对象</h2><p>window对象给我们提供了一个history对象，与浏览器历史记录进行交互。该对象包含用户访问过的URL。</p>
<ul>
<li>back()   历史记录后退 </li>
<li>forward()   历史记录前进</li>
<li>go(n)   历史记录前进或后退 n 步</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>Web-APIs4</title>
    <url>/post/3b59cb7e.html</url>
    <content><![CDATA[<ul>
<li><p><input disabled="" type="checkbox">  能够说出常见的offset系列属性的作用</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出常见的client系列属性的作用</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出常见的scroll系列属性的作用</p>
</li>
<li><p><input disabled="" type="checkbox">  能够封装简单的动画函数</p>
</li>
<li><p><input disabled="" type="checkbox">  能够写出网页轮播案例</p>
</li>
</ul>
<h2 id="元素偏移量offset系列"><a href="#元素偏移量offset系列" class="headerlink" title="元素偏移量offset系列"></a>元素偏移量offset系列</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>使用offset系列的相关属性可以获得元素的位置、大小等</p>
<ul>
<li>获得元素距离带有定位元素的位置</li>
<li>获得元素自身的大小</li>
<li>注意：返回的数值都不带单位</li>
</ul>
<p>offset系列常见属性：</p>
<table>
<thead>
<tr>
<th>element.offsetParent</th>
<th>返回该元素带有定位的父级元素，如果父级都没有定位则返回body</th>
</tr>
</thead>
<tbody><tr>
<td>element.offsetTop</td>
<td>返回元素相对带有定位父元素上方的偏移</td>
</tr>
<tr>
<td>element.offsetLeft</td>
<td>返回元素相对带有定位父元素左方的偏移</td>
</tr>
<tr>
<td>element.offsetWidth</td>
<td>返回自身padding+边框+内容区的宽度</td>
</tr>
<tr>
<td>element.offsetHeight</td>
<td>返回自身padding+边框+内容区的高度</td>
</tr>
</tbody></table>
<p>​     给元素赋值用style，获取元素用offset</p>
<p>案例：获取鼠标在盒子内的坐标</p>
<p>案例效果：GO</p>
<!--通过鼠标在页面的距离和盒子在页面的距离计算得出，事件：mousemove -->

<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>移动鼠标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'鼠标的坐标为'</span> <span class="token operator">+</span> <span class="token string">'('</span><span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> y <span class="token operator">+</span><span class="token string">')'</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>案例：拖动的模态框</p>
<p>案例效果：GO</p>
<!--拖拽：鼠标按下 移动 松开-->

<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>点击弹出登录框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    登录会员
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> clo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.close'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    clo<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousedown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> move<span class="token punctuation">)</span>
        <span class="token keyword">function</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> x <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
            box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> y <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span>move<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>案例：图片放大镜</p>
<p>案例效果：GO</p>
<!--黄色蒙版跟随鼠标移动，大图跟随小图 等比例移动-->

<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./image/s3.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 小图片对应大图片  蒙版对应大图片盒子 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>big<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./image/big.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> mask <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.mask'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> big <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.big'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.big img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseover'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        mask<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
        big<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseout'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        mask<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
        big<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> maskMax <span class="token operator">=</span> box<span class="token punctuation">.</span>offsetWidth <span class="token operator">-</span> mask<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>
        
        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetLeft <span class="token operator">-</span> mask<span class="token punctuation">.</span>offsetWidth<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetTop <span class="token operator">-</span> mask<span class="token punctuation">.</span>offsetWidth<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> maskMax<span class="token punctuation">)</span> x <span class="token operator">=</span> maskMax<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>y <span class="token operator">&gt;</span> maskMax<span class="token punctuation">)</span> y <span class="token operator">=</span> maskMax<span class="token punctuation">;</span>
        <span class="token keyword">var</span> bigMax <span class="token operator">=</span> img<span class="token punctuation">.</span>offsetWidth <span class="token operator">-</span> big<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>
		<span class="token comment">//大图跟随小图，等比例移动</span>
        <span class="token keyword">var</span> bigx <span class="token operator">=</span> x <span class="token operator">*</span> bigMax <span class="token operator">/</span> maskMax<span class="token punctuation">;</span>
        <span class="token keyword">var</span> bigy <span class="token operator">=</span> y <span class="token operator">*</span> bigMax <span class="token operator">/</span> maskMax<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bigx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mask<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        mask<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> y <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token operator">-</span>bigx <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token operator">-</span>bigy <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="元素可视区client系列"><a href="#元素可视区client系列" class="headerlink" title="元素可视区client系列"></a>元素可视区client系列</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>client为客户端，使用client系列的相关属性来获取可视区的相关信息。通过client的属性可以动态的得到该元素的边框大小，元素大小</p>
<table>
<thead>
<tr>
<th>element.clientTop</th>
<th>返回元素上边框的大小</th>
</tr>
</thead>
<tbody><tr>
<td>element.clientLeft</td>
<td>返回元素左边框的大小</td>
</tr>
<tr>
<td>element.clientWidth</td>
<td>返回自身padding+内容区的宽度</td>
</tr>
<tr>
<td>element.clientHeight</td>
<td>返回自身paddin+内容区的高度</td>
</tr>
</tbody></table>
<p>案例：淘宝flexible.js 源码分析</p>
<p>==立即执行函数==，创建了一个独立作用域，避免命名冲突</p>
<ul>
<li>(function( ){ })(传递参数)</li>
<li>(function( ){ }(传递参数))</li>
</ul>
<p>load事件触发条件</p>
<ul>
<li>a标签的超链接</li>
<li>F5或者刷新按钮</li>
<li>前进后退按钮  </li>
</ul>
<p>由于火狐浏览器中的“往返缓存”，后退无法刷新页面。此时可以使用pageshow事件来触发，pageload 会在load事件触发后触发，根据事件对象中的persisted来判断时候缓存中的页面触发的pageshow事件，注意这个事件给window添加                 </p>
<h2 id="元素滚动-scroll系列"><a href="#元素滚动-scroll系列" class="headerlink" title="元素滚动 scroll系列"></a>元素滚动 scroll系列</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>使用scroll 可以动态的获取该元素的大小和滚动距离   // 事件 onscroll</p>
<table>
<thead>
<tr>
<th>element.scrollTop</th>
<th>返回元素被卷去的上侧距离</th>
</tr>
</thead>
<tbody><tr>
<td>element.scrollLeft</td>
<td>返回元素被卷去的左侧距离</td>
</tr>
<tr>
<td>element.scrollWidth</td>
<td>返回自身自身实际的宽度</td>
</tr>
<tr>
<td>element.scrollHeight</td>
<td>返回自身自身实际的高度</td>
</tr>
</tbody></table>
<p>案例：仿淘宝右侧侧边栏</p>
<p>案例效果：GO</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>head<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我来组成头部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banner<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我来组成banner<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我来组成主体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>侧边栏
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goback<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>返回顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> sub <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.sub'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> main <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.main'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> banner <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.banner'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> goback <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.goback'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> subtop <span class="token operator">=</span> sub<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
    <span class="token keyword">var</span> maintop <span class="token operator">=</span> main<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
    <span class="token keyword">var</span> bannertop <span class="token operator">=</span> banner<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> dif <span class="token operator">=</span> window<span class="token punctuation">.</span>pageYOffset<span class="token operator">-</span>bannertop<span class="token punctuation">;</span>
        <span class="token keyword">var</span> dif1 <span class="token operator">=</span> window<span class="token punctuation">.</span>pageYOffset <span class="token operator">-</span> maintop<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>dif <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'fixed'</span><span class="token punctuation">;</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> subtop <span class="token operator">-</span> bannertop <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'absolute'</span><span class="token punctuation">;</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'250px'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dif1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>dif1 <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            goback<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            goback<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    goback<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">scroll</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h3 id="页面被卷去的头部"><a href="#页面被卷去的头部" class="headerlink" title="页面被卷去的头部"></a>页面被卷去的头部</h3><ul>
<li><p>新写法：window.pageYOffset</p>
</li>
<li><p>兼容性：声明DTD: document.documentElement.scrollTop   未声明DTD：    document.body.scrollTop</p>
</li>
</ul>
<p>mouseenter  和 mouseover</p>
<ul>
<li>mouseover  经过子盒子和自身盒子都会触发</li>
<li>mouseenter 经过自身盒子触发 // 不会冒泡</li>
</ul>
<h2 id="动画函数封装"><a href="#动画函数封装" class="headerlink" title="动画函数封装"></a>动画函数封装</h2><h3 id="核心原理"><a href="#核心原理" class="headerlink" title="核心原理"></a>核心原理</h3><p>通过setInterval() 不断移动盒子位置</p>
<p>案例：盒子移动</p>
<p>案例效果：GO</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>紫色盒子运动控制<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pink<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>purple<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// 封装动画函数，并将目标对象传入obj</span>
    <span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span>target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> time1 <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            obj<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>time1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> pink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.pink'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> purple <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.purple'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">animate</span><span class="token punctuation">(</span>pink<span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">animate</span><span class="token punctuation">(</span>purple<span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>       
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<!--封装obj目标对象，给不同的元素指定不同的定时器-->

<!--调用动画函数时，清除原有的定时器； 左右移动时的取整问题-->

<p>缓动动画效果</p>
<p>缓动动画就是让元素运动速度有所变化，常见的思路是通过每次移动的距离慢慢变小</p>
<p>案例：缓动动画</p>
<p>案例效果：GO</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>pink:800px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>pink:500px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pink<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// 封装动画函数，并将目标对象传入obj</span>
    <span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span>target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//定时器开始前需要清除原有定时器，否则会出现来回移动的现象</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>time1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj<span class="token punctuation">.</span>time1 <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token keyword">var</span> step <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">-</span> obj<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>
            step <span class="token operator">=</span> step<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token operator">:</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">==</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>time1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            obj<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> step <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> pink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.pink'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> btn1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> btn2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.btn2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    btn1<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">animate</span><span class="token punctuation">(</span>pink<span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    btn2<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">animate</span><span class="token punctuation">(</span>pink<span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> 
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>自定义函数 –&gt;  回调函数</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 第二种写法</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// 调用函数</span>
     <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 第二种写法</span>
callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="常见网页特效案例"><a href="#常见网页特效案例" class="headerlink" title="常见网页特效案例"></a>常见网页特效案例</h2><p>案例：网页轮播图</p>
<blockquote>
<p>节流阀：防止轮播图点击过快</p>
</blockquote>
<p>案例效果：GO</p>
<!--动态生成小圆圈 创建li节点；自动播放-->

<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. 获取元素</span>
    <span class="token keyword">var</span> arrow_l <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.arrow-l'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> arrow_r <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.arrow-r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> focus <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.focus'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> focusWidth <span class="token operator">=</span> focus<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>
    <span class="token comment">// 2. 鼠标经过focus 就显示隐藏左右按钮</span>
    focus<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arrow_l<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
        arrow_r<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 清除定时器变量</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    focus<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arrow_l<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
        arrow_r<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
        timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//手动调用点击事件</span>
            arrow_r<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3. 动态生成小圆圈  有几张图片，我就生成几个小圆圈</span>
    <span class="token keyword">var</span> ul <span class="token operator">=</span> focus<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> ol <span class="token operator">=</span> focus<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.circle'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(ul.children.length);</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建一个小li </span>
        <span class="token keyword">var</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 记录当前小圆圈的索引号 通过自定义属性来做 </span>
        li<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 把小li插入到ol 里面</span>
        ol<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4. 小圆圈的排他思想 我们可以直接在生成小圆圈的同时直接绑定点击事件</span>
        li<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 干掉所有人 把所有的小li 清除 current 类名</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ol<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ol<span class="token punctuation">.</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 留下我自己  当前的小li 设置current 类名</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'current'</span><span class="token punctuation">;</span>
            <span class="token comment">// 5. 点击小圆圈，移动图片 当然移动的是 ul </span>
            <span class="token comment">// ul 的移动距离 小圆圈的索引号 乘以 图片的宽度 注意是负值</span>
            <span class="token comment">// 当我们点击了某个小li 就拿到当前小li 的索引号</span>
            <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 当我们点击了某个小li 就要把这个li 的索引号给 num  </span>
            num <span class="token operator">=</span> index<span class="token punctuation">;</span>
            <span class="token comment">// 当我们点击了某个小li 就要把这个li 的索引号给 circle  </span>
            circle <span class="token operator">=</span> index<span class="token punctuation">;</span>
            <span class="token comment">// num = circle = index;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>focusWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">animate</span><span class="token punctuation">(</span>ul<span class="token punctuation">,</span> <span class="token operator">-</span>index <span class="token operator">*</span> focusWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 把ol里面的第一个小li设置类名为 current</span>
    ol<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'current'</span><span class="token punctuation">;</span>
    <span class="token comment">// 6. 克隆第一张图片(li)放到ul 最后面</span>
    <span class="token keyword">var</span> first <span class="token operator">=</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ul<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 7. 点击右侧按钮， 图片滚动一张</span>
    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// circle 控制小圆圈的播放</span>
    <span class="token keyword">var</span> circle <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// flag 节流阀</span>
    <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    arrow_r<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 关闭节流阀</span>
            <span class="token comment">// 如果走到了最后复制的一张图片，此时 我们的ul 要快速复原 left 改为 0</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ul<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            num<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token function">animate</span><span class="token punctuation">(</span>ul<span class="token punctuation">,</span> <span class="token operator">-</span>num <span class="token operator">*</span> focusWidth<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 打开节流阀</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 8. 点击右侧按钮，小圆圈跟随一起变化 可以再声明一个变量控制小圆圈的播放</span>
            circle<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token comment">// 如果circle == 4 说明走到最后我们克隆的这张图片了 我们就复原</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>circle <span class="token operator">==</span> ol<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                circle <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 调用函数</span>
            <span class="token function">circleChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 9. 左侧按钮做法</span>
    arrow_l<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                num <span class="token operator">=</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                ul<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token operator">-</span>num <span class="token operator">*</span> focusWidth <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>
            num<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token function">animate</span><span class="token punctuation">(</span>ul<span class="token punctuation">,</span> <span class="token operator">-</span>num <span class="token operator">*</span> focusWidth<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 点击左侧按钮，小圆圈跟随一起变化 可以再声明一个变量控制小圆圈的播放</span>
            circle<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token comment">// 如果circle &lt; 0  说明第一张图片，则小圆圈要改为第4个小圆圈（3）</span>
            <span class="token comment">// if (circle &lt; 0) {</span>
            <span class="token comment">//     circle = ol.children.length - 1;</span>
            <span class="token comment">// }</span>
            circle <span class="token operator">=</span> circle <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> ol<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> circle<span class="token punctuation">;</span>
            <span class="token comment">// 调用函数</span>
            <span class="token function">circleChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">circleChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 先清除其余小圆圈的current类名</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ol<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ol<span class="token punctuation">.</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 留下当前的小圆圈的current类名</span>
        ol<span class="token punctuation">.</span>children<span class="token punctuation">[</span>circle<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'current'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 10. 自动播放轮播图</span>
    <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//手动调用点击事件</span>
        arrow_r<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>案例：带有动画地返回顶部   （返回顶部和动画结合）</p>
<p>案例效果：GO</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>head<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我来组成头部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banner<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我来组成banner<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我来组成主体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>侧边栏
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goback<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>返回顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> sub <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.sub'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> main <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.main'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> banner <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.banner'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> goback <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.goback'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> subtop <span class="token operator">=</span> sub<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
    <span class="token keyword">var</span> maintop <span class="token operator">=</span> main<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
    <span class="token keyword">var</span> bannertop <span class="token operator">=</span> banner<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> dif <span class="token operator">=</span> window<span class="token punctuation">.</span>pageYOffset<span class="token operator">-</span>bannertop<span class="token punctuation">;</span>
        <span class="token keyword">var</span> dif1 <span class="token operator">=</span> window<span class="token punctuation">.</span>pageYOffset <span class="token operator">-</span> maintop<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>dif <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'fixed'</span><span class="token punctuation">;</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> subtop <span class="token operator">-</span> bannertop <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'absolute'</span><span class="token punctuation">;</span>
            sub<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'250px'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dif1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>dif1 <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            goback<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            goback<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    goback<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">animate</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// 封装动画函数，并将目标对象传入obj</span>
    <span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span>target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//定时器开始前需要清除原有定时器，否则会出现来回移动的现象</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>time1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj<span class="token punctuation">.</span>time1 <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token keyword">var</span> step <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">-</span> obj<span class="token punctuation">.</span>pageYOffset<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>
            step <span class="token operator">=</span> step<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token operator">:</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>pageYOffset <span class="token operator">==</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>time1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// obj.style.left = obj.offsetLeft + step + 'px';</span>
            window<span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>pageYOffset <span class="token operator">+</span> step <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>案例：筋斗云导航栏</p>
<p>案例效果：GO</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c_nav<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c-nav<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cloud<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>首页新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>师资力量<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>活动策划<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>企业文化<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>招聘信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>公司简介<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我是佩奇<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>啥是佩奇<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 1. 获取元素</span>
        <span class="token keyword">var</span> cloud <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.cloud'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// (1) 鼠标经过把当前小li 的位置做为目标值</span>
            lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">animate</span><span class="token punctuation">(</span>cloud<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// (2) 鼠标离开就回到起始的位置 </span>
            lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">animate</span><span class="token punctuation">(</span>cloud<span class="token punctuation">,</span> current<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// (3) 当我们鼠标点击，就把当前位置做为目标值</span>
            lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>




]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>Web前端面试</title>
    <url>/post/82dc1122.html</url>
    <content><![CDATA[<ol>
<li><p>手写jsonp的实现</p>
</li>
<li><p>手写链表倒数第K个查找</p>
</li>
<li><p>http请求头，请求体，cookie在哪个里面？url在哪里面？</p>
</li>
<li><p>原型链的解释</p>
</li>
<li><p>对闭包的理解，实现一个暴露内部变量，而且外部可以访问修改的函数</p>
</li>
<li><p>基本的数据类型</p>
</li>
<li><p>基本的两列自适应布局</p>
</li>
<li><p>unix中常用的命令行</p>
</li>
<li><p>OSI模型，HTTP,TCP,UDP分别在哪些层</p>
</li>
<li><p>解释平衡二叉树，以及在数据结构中的应用（红黑树）</p>
</li>
<li><p>快排的时间复杂度和空间复杂度</p>
</li>
<li><p>手写一个jQuery插件</p>
</li>
<li><p>在jquery方法和原型上面添加方法的区别和实现，以及jquery对象的实现</p>
</li>
<li><p>手写一个递归函数</p>
</li>
<li><p>对前端路由的理解？前后端路由的区别？</p>
</li>
<li><p>介绍一下webpack和gulp，以及项目中具体的使用</p>
</li>
<li><p>你对es6的了解</p>
</li>
<li><p>解释一下vue和react，以及异同点</p>
</li>
<li><p>关于平衡二叉树</p>
</li>
<li><p>前后端分离的意义以及对前端工程化的理解</p>
</li>
<li><p>使用css实现一个三角形</p>
</li>
<li><p>用promise手写ajax</p>
</li>
<li><p>手写一个类的继承，并解释一下</p>
</li>
<li><p>解释一下call函数和apply函数的作用，以及用法</p>
</li>
<li><p>你说自己抗压能力强，具体表现在哪里？</p>
</li>
<li><p>对前端前景的展望，以后前端会怎么发展</p>
</li>
<li><p>手写第一次面试没有写出来的链表问题，要求用es6写</p>
</li>
<li><p>平时是怎么学技术的？</p>
</li>
<li><p>平时大学里面时间是怎么规划的？</p>
</li>
<li><p>接下来有什么计划？这个学期和下个学期的计划是？</p>
</li>
<li><p>项目中遇到的难点，或者你学习路上的难点</p>
</li>
<li><p>你是通过什么方法和途径来学习前端的</p>
</li>
<li><p>手写一个简单遍历算法</p>
</li>
<li><p>解释一下react和vue，以及区别</p>
</li>
<li><p>你在团队中更倾向于什么角色？</p>
</li>
<li><p>对java的理解</p>
</li>
<li><p>介绍node.js，并且介绍你用它做的项目</p>
</li>
<li><p>手写一个js的深克隆</p>
</li>
<li><p>for函数里面setTimeout异步问题</p>
</li>
<li><p>手写归并排序</p>
</li>
<li><p>介绍自己的项目</p>
</li>
<li><p>实现两个数组的排序合并</p>
</li>
<li><p>手写一个原生ajax</p>
</li>
<li><p>手写一个promise版的ajax</p>
</li>
<li><p>手写实现一个promise</p>
</li>
<li><p>手写实现requireJS模块实现</p>
</li>
<li><p>手写实现jquery里面的insertAfter</p>
</li>
<li><p>react和vue的介绍以及异同</p>
</li>
<li><p>AMD和CMD，commonJS的区别</p>
</li>
<li><p>介绍一下backbone</p>
</li>
<li><p>了解过SEO吗？</p>
</li>
<li><p>低版本浏览器不支持HTML5标签怎么解决？</p>
</li>
<li><p>用js使低版本浏览器支持HTML5标签 底层是怎么实现的？</p>
</li>
<li><p>实现一个布局：左边固定宽度为200，右边自适应，而且滚动条要自动选择只出现最高的那个</p>
</li>
<li><p>画出盒子模型，要使谷歌浏览器的盒子模型显示得跟IE浏览器一致（让谷歌跟ie一致，不是ie跟谷歌一致），该怎么做？</p>
</li>
<li><p>手写JS实现类继承，讲原型链原理，并解释new一个对象的过程都发生了什么</p>
</li>
<li><p>Array对象自带的方法，一一列举</p>
</li>
<li><p>若干个数字，怎么选出最大的五个</p>
</li>
<li><p>Array对象自带的排序函数底层是怎么实现的？</p>
</li>
<li><p>常用的排序算法有哪些，介绍一下选择排序</p>
</li>
<li><p>了解navigator对象吗？</p>
</li>
<li><p>手写一个正则表达式，验证邮箱</p>
</li>
<li><p>link和@import引入CSS的区别？</p>
</li>
<li><p>刚才说有些浏览器不兼容@import，具体指哪些浏览器？</p>
</li>
<li><p>介绍一下cookie,localstorage,sessionstorage,session</p>
</li>
<li><p>jquery绑定click的方法有几种</p>
</li>
<li><p>你的优点/竞争力</p>
</li>
<li><p>移动端适配问题</p>
</li>
<li><p>react的难点在哪里</p>
</li>
<li><p>做过css动画吗</p>
</li>
<li><p>如何优化网站</p>
</li>
<li><p>以后的规划</p>
</li>
<li><p>你做过最困难的事情是啥？</p>
</li>
<li><p>css3 html5新特性</p>
</li>
<li><p>闭包，ES6，跨域</p>
</li>
<li><p>问做过啥项目，用到什么技术，遇到什么困难</p>
</li>
<li><p>兼容性</p>
</li>
<li><p>盒子模型</p>
</li>
<li><p>Array的unshift() method的作用是什么？如何连接两个Array？如何在Array里移除一个元素？</p>
</li>
<li><p>用纸笔写一个Closure，任意形式和内容</p>
</li>
<li><p>知不知道Array-like Object？</p>
</li>
<li><p>如何用Native JavaScript来读写Cookie？</p>
</li>
<li><p>知不知道CSS Box-model？</p>
</li>
<li><p>如何做一个AJAX Request？</p>
</li>
<li><p>Cross-domain access有没有了解？</p>
</li>
<li><p>前端安全方面有没有了解？XSS和CSRF如何攻防？</p>
</li>
<li><p>HTTP Response的Header里面都有些啥？</p>
</li>
<li><p>知不知道HTTP2？</p>
</li>
<li><p>输入URL后发生了什么？</p>
</li>
<li><p>new operator实际上做了什么？</p>
</li>
<li><p>面向对象的属性有哪些？</p>
</li>
<li><p>做一个两栏布局，左边fixed width，右边responsive，用纸笔手写</p>
</li>
<li><p>讲一下AJAX Request</p>
</li>
<li><p>讲一下Cross-domain access</p>
</li>
<li><p>介绍一下做过的项目</p>
</li>
<li><p>问到了多个服务器怎么弄，架构之类的</p>
</li>
<li><p>angular的渲染流程</p>
</li>
<li><p>脏检查</p>
</li>
<li><p>nodejs的架构. 优缺点. 回调</p>
</li>
<li><p>css 盒模型</p>
</li>
<li><p>css 布局，左边定宽右边自适应</p>
</li>
<li><p>冒泡和捕获，事件流哪三个阶段？</p>
</li>
<li><p>实现事件代理</p>
</li>
<li><p>原型链</p>
</li>
<li><p>继承的两种方法</p>
</li>
<li><p>ajax，原生ajax的四个过程</p>
</li>
<li><p>闭包，简单说一个闭包的应用，然后闭包的主要作用是什么</p>
</li>
<li><p>css:两个块状元素上下的margin-top和margin-bottom会重叠。啥原因？怎么解决？</p>
</li>
<li><p>js：写一个递归。就是每隔5秒调用一个自身，一共100次</p>
</li>
<li><p>cookie和session有什么区别</p>
</li>
<li><p>网络分层结构</p>
</li>
<li><p>你的不足是什么？</p>
</li>
<li><p>做了那么多项目，有没有自己的归纳总结</p>
</li>
<li><p>工程怎么进行文件管理</p>
</li>
<li><p>less和sass掌握程度</p>
</li>
<li><p>Cookie 是否会被覆盖，localStorage是否会被覆盖</p>
</li>
<li><p>事件代理js实现</p>
</li>
<li><p>Css实现动画效果</p>
</li>
<li><p>Animation还有哪些其他属性</p>
</li>
<li><p>Css实现三列布局</p>
</li>
<li><p>Css实现保持长宽比1:1</p>
</li>
<li><p>Css实现两个自适应等宽元素中间空10个像素</p>
</li>
<li><p>requireJS的原理是什么</p>
</li>
<li><p>如何保持登录状态</p>
</li>
<li><p>浮动的原理以及如何清除浮动</p>
</li>
<li><p>Html的语义化</p>
</li>
<li><p>原生js添加class怎么添加，如果本身已经有class了，会不会覆盖，怎么保留？</p>
</li>
<li><p>Jsonp的原理。怎么去读取一个script里面的数据？</p>
</li>
<li><p>如果页面初始载入的时候把ajax请求返回的数据存在localStorage里面，然后每次调用的时候去localStorage里面取数，是否可行。</p>
</li>
<li><p>304是什么意思？有没有方法不请求不经过服务器直接使用缓存</p>
</li>
<li><p>http请求头有哪些字段</p>
</li>
<li><p>数组去除一个函数。用arr.splice。又问splice返回了什么？应该返回的是去除的元素。</p>
</li>
<li><p>js异步的方法（promise，generator，async）</p>
</li>
<li><p>Cookie跨域请求能不能带上</p>
</li>
<li><p>最近看什么开源项目？</p>
</li>
<li><p>commonJS和AMD</p>
</li>
<li><p>平时是怎么学习的？</p>
</li>
<li><p>为什么要用translate3d？</p>
</li>
<li><p>对象中key-value的value怎么再放一个对象？</p>
</li>
<li><p>Get和post的区别？</p>
</li>
<li><p>Post一个file的时候file放在哪的？</p>
</li>
<li><p>说说你对组件的理解</p>
</li>
<li><p>组件的html怎么进行管理</p>
</li>
<li><p>js的异步加载，promise的三种状态，ES7中的async用过么</p>
</li>
<li><p>静态属性怎么继承</p>
</li>
<li><p>js原型链的继承</p>
</li>
<li><p>jquery和zepto有什么区别</p>
</li>
<li><p>angular的双向绑定原理</p>
</li>
<li><p>angular和react的认识</p>
</li>
<li><p>MVVM是什么</p>
</li>
<li><p>移动端是指手机浏览器，还是native，还是hybrid</p>
</li>
<li><p>你用了移动端的什么库类和框架？</p>
</li>
<li><p>移动端要注意哪些？</p>
</li>
<li><p>适配有去考虑么，retina屏幕啊？</p>
</li>
<li><p>rem是什么？em是什么？如果上一层就是根root了，em和rem等价么？</p>
</li>
<li><p>怎么测试的？会自动化测试么？</p>
</li>
<li><p>你觉得你什么技术最擅长？</p>
</li>
<li><p>你平时有没有什么技术的沉淀？</p>
</li>
<li><p>单向链表怎么查找有没有环？</p>
</li>
<li><p>怎么得到一个页面的a标签？</p>
</li>
<li><p>怎么在页面里放置一个很简单的图标，不能用img和background-img？</p>
</li>
<li><p>正则表达式判断url</p>
</li>
<li><p>怎么去除字符串前后的空格</p>
</li>
<li><p>实现页面的局部刷新</p>
</li>
<li><p>绝对定位与相对定位的区别</p>
</li>
<li><p>js轮播实现思路</p>
</li>
<li><p>使用js画一个抛物线，抛物线上有个小球随着抛物线运动，有两个按钮能使小球继续运动停止运动</p>
</li>
<li><p>java五子棋，说下实现思路</p>
</li>
<li><p>如何让各种情况下的div居中(绝对定位的div,垂直居中,水平居中)？</p>
</li>
<li><p>display有哪些值？说明他们的作用</p>
</li>
<li><p>css定义的权重</p>
</li>
<li><p>requirejs实现原理</p>
</li>
<li><p>requirejs怎么防止重复加载</p>
</li>
<li><p>ES6里头的箭头函数的this对象与其他的有啥区别</p>
</li>
<li><p>tcp/udp区别</p>
</li>
<li><p>tcp三次握手过程</p>
</li>
<li><p>xss与csrf的原理与怎么防范</p>
</li>
<li><p>mysql与 MongoDB的区别</p>
</li>
<li><p>w3c事件与IE事件的区别</p>
</li>
<li><p>有没有上传过些什么npm模块</p>
</li>
<li><p>IE与W3C怎么阻止事件的冒泡</p>
</li>
<li><p>gulp底层实现原理</p>
</li>
<li><p>webpack底层实现原理</p>
</li>
<li><p>gulp与webpack区别</p>
</li>
<li><p>vuejs与angularjs的区别</p>
</li>
<li><p>vuex是用来做什么的</p>
</li>
<li><p>说下你知道的响应状态码</p>
</li>
<li><p>ajax的过程以及 readyState几个状态的含义</p>
</li>
<li><p>你除了前端之外还会些什么？</p>
</li>
<li><p>cookie与session的区别</p>
</li>
<li><p>一些关于php与java的问题</p>
</li>
<li><p>你觉得你哪个项目是你做的最好的</p>
</li>
<li><p>说说你在项目中遇到了哪些困难,是怎么解决的</p>
</li>
<li><p>前端优化你知道哪些</p>
</li>
<li><p>webpack是用来干嘛的</p>
</li>
<li><p>webpack与gulp的区别</p>
</li>
<li><p>es6与es7了解多少</p>
</li>
<li><p>说下你知道的响应状态码</p>
</li>
<li><p>看过哪些框架的源码</p>
</li>
<li><p>遇到过哪些浏览器兼容性问题</p>
</li>
<li><p>清除浮动有哪几种方式,分别说说</p>
</li>
<li><p>你知道有哪些跨域方式,分别说说</p>
</li>
<li><p>JavaScript有哪几种类型的值</p>
</li>
<li><p>使用 new操作符时具体是干了些什么</p>
</li>
<li><p>学习前端的方法以及途径</p>
</li>
<li><p>怎么实现两个大整数的相乘，说下思路</p>
</li>
<li><p>你学过数据结构没,说说你都了解些什么</p>
</li>
<li><p>你学过计算机操作系统没,说说你都了解些什么</p>
</li>
<li><p>你学过计算机组成原理没,说说你都了解些什么</p>
</li>
<li><p>你学过算法没,说说你都了解些什么</p>
</li>
<li><p>说下选择排序,冒泡排序的实现思路</p>
</li>
<li><p>用过哪些框架</p>
</li>
<li><p>让你设计一个前端css框架你怎么做</p>
</li>
<li><p>了解哪些设计模式说说看</p>
</li>
<li><p>说下你所了解的设计模式的优点</p>
</li>
<li><p>vue源码结构</p>
</li>
<li><p>状态码</p>
</li>
<li><p>浏览器缓存的区别</p>
</li>
<li><p>304与200读取缓存的区别</p>
</li>
<li><p>http请求头有哪些,说说看你了解哪些</p>
</li>
<li><p>js中this的作用</p>
</li>
<li><p>js中上下文是什么</p>
</li>
<li><p>js有哪些函数能改变上下文</p>
</li>
<li><p>你所了解的跨域的方法都说说看你了解的？</p>
</li>
<li><p>要是让你自己写一个js框架你会用到哪些设计模式</p>
</li>
<li><p>平常在项目中用到过哪些设计模式,说说看</p>
</li>
<li><p>一来给了张纸要求写js自定义事件</p>
</li>
<li><p>前端跨域的方法</p>
</li>
<li><p>call与apply的区别</p>
</li>
<li><p>h5有个api能定位你知道是哪个吗？</p>
</li>
<li><p>vue与angularjs中双向数据绑定是怎样实现的？</p>
</li>
<li><p>webpack怎样配置？</p>
</li>
<li><p>nodejs中的文件怎么读写？</p>
</li>
<li><p>link和@import有什么区别？</p>
</li>
<li><p>cookies，sessionStorage 和 localStorage 的区别</p>
</li>
<li><p>看过哪些前端的书？平时是怎么学习的</p>
</li>
<li><p>说下你所理解的mvc与mvvc</p>
</li>
<li><p>position有哪些值,说下各自的作用</p>
</li>
<li><p>写个从几个li中取下标的闭包代码</p>
</li>
<li><p>你的职业规划是怎么样的？</p>
</li>
<li><p>移动端性能优化</p>
</li>
<li><p>lazyload如何实现</p>
</li>
<li><p>点透问题</p>
</li>
<li><p>前端安全</p>
</li>
<li><p>原生js模板引擎</p>
</li>
<li><p>repaint和reflow区别</p>
</li>
<li><p>requirejs如何避免循环依赖？</p>
</li>
<li><p>实现布局：左边一张图片，右边一段文字（不是环绕）</p>
</li>
<li><p>window.onload和$(document).ready()的区别，浏览器加载转圈结束时哪个时间点？</p>
</li>
<li><p>form表单当前页面无刷新提交 target iframe</p>
</li>
<li><p>setTimeout和setInterval区别，如何互相实现？</p>
</li>
<li><p>如何避免多重回调—promise，promise简单描述一下，如何在外部进行resolve()</p>
</li>
<li><p>margin坍塌？水平方向会不会坍塌？</p>
</li>
<li><p>伪类和伪元素区别</p>
</li>
<li><p>vue如何实现父子组件通信，以及非父子组件通信</p>
</li>
<li><p>数组去重</p>
</li>
<li><p>使用flex布局实现三等分，左右两个元素分别贴到左边和右边，垂直居中</p>
</li>
<li><p>平时如何学前端的，看了哪些书，关注了哪些公众号</p>
</li>
<li><p>实现bind函数</p>
</li>
<li><p>数组和链表区别，分别适合什么数据结构</p>
</li>
<li><p>对mvc的理解</p>
</li>
<li><p>描述一个印象最深的项目，在其中担任的角色，解决什么问题</p>
</li>
<li><p>http状态码。。。401和403区别？</p>
</li>
<li><p>描述下二分查找</p>
</li>
<li><p>为什么选择前端，如何学习的，看了哪些书，《js高级程序设计》和《你不知道的js》有什么区别，看书，看博客，看公众号三者的时间是如何分配的？</p>
</li>
<li><p>如何评价BAT？</p>
</li>
<li><p>描述下在实习中做过的一个项目，解决了什么问题，在其中担任了什么角色？这个过程存在什么问题，有什么值得改进的地方？</p>
</li>
<li><p>如何看待加班，如果有个项目需要连续一个月加班，你怎么看？</p>
</li>
<li><p>遇到的压力最大的一件事是什么？如何解决的？</p>
</li>
<li><p>平时有什么爱好</p>
</li>
<li><p>自身有待改进的地方</p>
</li>
<li><p>n长的数组放入n+1个数，不能重复，找出那个缺失的数</p>
</li>
<li><p>手里有什么offer</p>
</li>
<li><p>你对于第一份工作最看重的三个方面是什么？</p>
</li>
<li><p>如何评价现在的前端？</p>
</li>
<li><p>用原生js实现复选框选择以及全选非全选功能</p>
</li>
<li><p>用4个颜色给一个六面体上色有多少种情况</p>
</li>
<li><p>amd和cmd区别</p>
</li>
<li><p>为什么选择前端，移动端性能优化</p>
</li>
<li><p>vue的特点？双向数据绑定是如何实现的</p>
</li>
<li><p>Object.defineProperty</p>
</li>
<li><p>算法题：数组去重，去除重复两次以上的元素，代码题：嵌套的ul-li结构，根据input中输入的内容，去除相应的li节点，且如果某个嵌套的ul下面的li都被移除，则该ul的父li节点也要被移除</p>
</li>
<li><p>页面加载过程</p>
</li>
<li><p>浏览器如何实现图片缓存</p>
</li>
</ol>
]]></content>
      <categories>
        <category>面经</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法汇总</title>
    <url>/post/e31c83b1.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>Web-APIs5</title>
    <url>/post/4c5efbe8.html</url>
    <content><![CDATA[<ul>
<li><p><input disabled="" type="checkbox">  能够写出移动端触屏事件</p>
</li>
<li><p><input disabled="" type="checkbox">  能够写出常见的移动端特效</p>
</li>
<li><p><input disabled="" type="checkbox">  能够使用移动端开发插件开发移动端特效</p>
</li>
<li><p><input disabled="" type="checkbox">  能够使用移动端开发框架开发移动端特效</p>
</li>
</ul>
<h2 id="触屏事件"><a href="#触屏事件" class="headerlink" title="触屏事件"></a>触屏事件</h2><p>触屏事件概述：移动端浏览器兼容性较好，我们可以放心使用JS。</p>
<p>触摸事件对象：touchstart touchmove  touchend  三个事件都会有各自的事件</p>
<table>
<thead>
<tr>
<th>触摸列表</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>touches</td>
<td>正在触摸屏幕的所有手指的列表</td>
</tr>
<tr>
<td>targetTouches</td>
<td>正在触摸当前DOM元素上手指的一个列表</td>
</tr>
<tr>
<td>changedTouches</td>
<td>手指状态发生了改变的列表</td>
</tr>
</tbody></table>
<p>案例：盒子拖动</p>
<!--阻止盒子默认拖动-->

<h2 id="移动端常见特效"><a href="#移动端常见特效" class="headerlink" title="移动端常见特效"></a>移动端常见特效</h2><p>案例：移动端轮播图</p>
<!--拖动翻页  过度完成之后再判断是否轮播完-->

<p>classList 属性</p>
<p>classList.add(类名)   添加类名</p>
<p>案例：手指滑动轮播图</p>
<p>拖动结束后切换轮播图</p>
<p>案例：返回顶部</p>
<p>click 延时：移动端click事件会有300ms的延时，原因是移动端双击会缩放页面 </p>
<p>解决方案</p>
<ul>
<li>禁止缩放</li>
<li>自定义函数</li>
<li>fastclick</li>
</ul>
<h2 id="移动端常用开发插件"><a href="#移动端常用开发插件" class="headerlink" title="移动端常用开发插件"></a>移动端常用开发插件</h2><p>JS文件就是JS插件，它遵循一定的编写规范，方便程序展示效果，拥有特定功能且方便调用。 // 比如轮播图和瀑布流插件</p>
<ul>
<li><p>fastclick插件：解决click延时</p>
</li>
<li><p>swiper插件：轮播图</p>
</li>
<li><p>superslide：焦点图 tab标签切换  图片滚动</p>
</li>
</ul>
<h3 id="插件的使用"><a href="#插件的使用" class="headerlink" title="插件的使用"></a>插件的使用</h3><ol>
<li>确认插件实现的功能</li>
<li>去官网查看使用说明</li>
<li>下载插件</li>
<li>打开demo实例文件，查看需要引入的相关文件</li>
<li>复制demo实例文件中的结构HTML，CSS 以及JS</li>
</ol>
<p>案例：练习轮播图插件 swiper</p>
<p>案例：移动端视频插件  zy.media.js</p>
<h2 id="移动端常用开发框架"><a href="#移动端常用开发框架" class="headerlink" title="移动端常用开发框架"></a>移动端常用开发框架</h2><p>框架就是一套架构，他会基于自身的特点向用户提供一套较为完整的解决方案。</p>
<p>插件一般是为了解决某个问题而专门存在，其功能单一，并且比较小</p>
<h2 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h2><p>随着互联网的快速发展，基于网页的应用越来越普遍，同时也变得越来越复杂，为了满足各种这样的需求，会经常在本地存储大量的数据。</p>
<p>本地存储特性</p>
<ol>
<li>数据存储在用户浏览器中</li>
<li>设置、读取甚至页面刷新也不丢失数据</li>
<li>容量较大， sessionStorage 约 5M   localStorage 约 20M</li>
<li>只能存储字符串</li>
</ol>
<p>window.sessionStorage </p>
<ol>
<li>生命周期为关闭浏览器窗口</li>
<li>在同一个窗口（页面）下数据可以共享</li>
<li>以键值对的形式存储使用   sessionStorage.setItem (key,value)</li>
<li>sessionStorage.setItem  增加  sessionStorage.getItem 获取  sessionStorage.removeItem  删除  sessionStorage.clear  全部清除</li>
</ol>
<p>window. localStorage </p>
<ol>
<li>生命周期永久生效，除非手动删除，否则关闭页面也会存在</li>
<li>可以多窗口（页面）共享</li>
<li>以键值对的形式存储使用   localStorage.setItem (key,value)</li>
<li>localStorage.setItem  增加  localStorage.getItem 获取  localStorage.removeItem  删除  localStorage.clear  全部清除</li>
</ol>
<p>案例：记住用户名</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery快速开发</title>
    <url>/post/c60c369d.html</url>
    <content><![CDATA[<ul>
<li><p><input disabled="" type="checkbox">  能够说出jQuery的特点</p>
</li>
<li><p><input disabled="" type="checkbox">  能够说出DOM对象和jQuery对象的区别</p>
</li>
<li><p><input disabled="" type="checkbox">  能够写出常用的jQuery选择器</p>
</li>
<li><p><input disabled="" type="checkbox">  能够操作jQuery样式</p>
</li>
<li><p><input disabled="" type="checkbox">  能够写出常用的jQuery动画</p>
</li>
<li><p><input disabled="" type="checkbox">  能够操作jQuery属性和元素</p>
</li>
</ul>
<h2 id="jQuery概述"><a href="#jQuery概述" class="headerlink" title="jQuery概述"></a>jQuery概述</h2><h3 id="JavaScript库"><a href="#JavaScript库" class="headerlink" title="JavaScript库"></a>JavaScript库</h3><p>JavaScript库是一个封装好的特定的集合（方法和函数）。比尔动画animate、hide、show等</p>
<p>常见的JavaScript库 </p>
<ul>
<li>jQuery</li>
<li>Prototype</li>
<li>YUI</li>
<li>Dojo</li>
<li>Ext JS</li>
<li>移动端的  zepto</li>
</ul>
<h3 id="jQuery的概念"><a href="#jQuery的概念" class="headerlink" title="jQuery的概念"></a>jQuery的概念</h3><p>jQuery是一个快速、简介的JavaScript库。jQuery封装了JavaScript常见的功能代码，优化了DOM操作，事件处理、动画设计和Ajia交互</p>
<h2 id="jQuery基本使用"><a href="#jQuery基本使用" class="headerlink" title="jQuery基本使用"></a>jQuery基本使用</h2><h3 id="jQuery入口函数"><a href="#jQuery入口函数" class="headerlink" title="jQuery入口函数"></a>jQuery入口函数</h3><ul>
<li>```<br>$(function(){<pre><code>... //此处是页面DOM加载完成的入口
</code></pre>
});<pre class="line-numbers language-none"><code class="language-none">
- ```
  $(document).ready(fuction(){
  	... //此处是页面DOM加载完成的入口
  });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>$ 是jQuery的别称，同时也是jQuery的顶级对象</li>
</ul>
<h3 id="jQuery对象和DOM对象"><a href="#jQuery对象和DOM对象" class="headerlink" title="jQuery对象和DOM对象"></a>jQuery对象和DOM对象</h3><p>jQuery对象只能使用jQuery方法，DOM对象只能使用原生的JavaScript属性和方法</p>
<p>原生js比jQuery更大，因此需要互相转换</p>
<ul>
<li>DOM转jQuery:  $(DOM)</li>
<li>jQuery转DOM: jQuery[index]  ||  jQuery.get(index)</li>
</ul>
<h2 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h2><p><img src="https://cdn.linxueya.cn/img/jQuery-choose.png"></p>
<p>获取元素： $(“div”);</p>
<p>设置样式： $(“div”).css(“background”,”pink”);</p>
<p>隐式迭代（重要）：遍历内部DOM元素（伪数组形式存储）的过程就叫做隐式迭代。</p>
<p><img src="https://cdn.linxueya.cn/img/jQuery-choose2.png"></p>
<p>案例：新浪下拉菜单</p>
<p>案例效果：GO</p>
<h3 id="筛选元素"><a href="#筛选元素" class="headerlink" title="筛选元素 :"></a>筛选元素 :</h3><p><img src="https://cdn.linxueya.cn/img/jQuery-choose3.png"></p>
<ul>
<li>兄弟元素siblings, 除了自身元素之外的亲兄弟： <code> $(0l .item).siblings("li").css("color","red");</code></li>
<li>第n个元素（1）利用选择器的方式来选择：<code>$("ul li:eq(2)").css("color","red")</code>;</li>
<li>第n个元素（2）==利用选择方法的方式来选择==：<code>$("ul li").eq(2).css("color","red")</code>;</li>
<li>判断是都有某个类名</li>
</ul>
<p>重点记住：parent()   children()   find()   siblings()  eq()</p>
<h3 id="排它思想"><a href="#排它思想" class="headerlink" title="排它思想"></a>排它思想</h3><p>案例：淘宝服饰tab栏切换</p>
<!--得到当前索引号：$(this).index()-->

<h3 id="链式编程"><a href="#链式编程" class="headerlink" title="链式编程"></a>链式编程</h3><p>$(this).css(‘color’,’red’).sibling().css(‘color’,’’);</p>
<h2 id="jQuery样式操作"><a href="#jQuery样式操作" class="headerlink" title="jQuery样式操作"></a>jQuery样式操作</h2><h3 id="操作ccs样式"><a href="#操作ccs样式" class="headerlink" title="操作ccs样式"></a>操作ccs样式</h3><ul>
<li>参数只写属性名，则返回属性值 <code>$(this).css("color");</code></li>
<li>参数是属性名，属性值，逗号隔开 <code>$(this).css("color","red");</code></li>
<li>可以是使用对象的方式来操作，如果复合属性必须使用驼峰命名法 <code>$(this).css({color":"red","font-size":"20px"});</code></li>
</ul>
<h3 id="设置类样式方法"><a href="#设置类样式方法" class="headerlink" title="设置类样式方法"></a>设置类样式方法</h3><ul>
<li>添加类： addClass</li>
<li>删除类： removeClass</li>
<li>切换类：toggleClass</li>
</ul>
<p>案例： tab栏切换</p>
<h2 id="jQuery效果"><a href="#jQuery效果" class="headerlink" title="jQuery效果"></a>jQuery效果</h2><p><img src="https://cdn.linxueya.cn/img/jQuery-animate.png"></p>
<h3 id="显示隐藏效果"><a href="#显示隐藏效果" class="headerlink" title="显示隐藏效果"></a>显示隐藏效果</h3><ul>
<li>显示 <code> show([speed,[easing],[fn]])</code> // 参数可省略，无动画直接显示</li>
<li>隐藏 <code> hide([speed,[easing],[fn]])</code></li>
<li>切换 <code>toggle([speed,[easing],[fn]])</code></li>
</ul>
<p>案例</p>
<h3 id="滑动"><a href="#滑动" class="headerlink" title="滑动"></a>滑动</h3><ul>
<li>向下滑动 <code>slideDown([easing],[fn]])</code> // 参数可省略，无动画直接显示</li>
<li>向上滑动 <code> slideUp([speed,[easing],[fn]])</code></li>
<li>滑动切换 <code>slideToggle([speed,[easing],[fn]])</code></li>
</ul>
<h3 id="事件切换"><a href="#事件切换" class="headerlink" title="事件切换"></a>事件切换</h3><ul>
<li>hover就是鼠标经过和离开的复合写法 ：<code>hover(function(){ },function(){ })</code></li>
<li>hover, 一个function：  <code>hover(function(){  toggle   })</code></li>
</ul>
<h3 id="动画效果队列"><a href="#动画效果队列" class="headerlink" title="动画效果队列"></a>动画效果队列</h3><p>停止排队： stop（）</p>
<p>stop() 写到动画或者效果的前面，相当于停止上一次动画</p>
<h3 id="淡入淡出"><a href="#淡入淡出" class="headerlink" title="淡入淡出"></a>淡入淡出</h3><ul>
<li>淡入 <code>fadeIn([easing],[fn]])</code> // 参数可省略，无动画直接显示</li>
<li>淡出 <code>fadeOut([speed,[easing],[fn]])</code></li>
<li>淡入淡出切换 <code>fadeToggle([speed,[easing],[fn]])</code></li>
<li>透明度切换 <code>fadeTo([[speed],opacity,[easing],[fn]])</code></li>
</ul>
<p>案例</p>
<h3 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h3><ul>
<li><code>animate(params,[speed],opacity,[easing],[fn])</code></li>
<li>params 想要更改的样式属性，以对象的形式传递</li>
</ul>
<p>案例：王者荣耀手风琴</p>
<h2 id="jQuery属性操作"><a href="#jQuery属性操作" class="headerlink" title="jQuery属性操作"></a>jQuery属性操作</h2><ul>
<li>设置或获取固有属性值  prop(“属性名”)   prop(“属性名”，属性值)   </li>
<li>设置或获取自定义属性值  attr (“属性名”)   attr(“属性名”，属性值)   </li>
</ul>
<p>案例：购物车全选</p>
<h2 id="jQuery文本属性值"><a href="#jQuery文本属性值" class="headerlink" title="jQuery文本属性值"></a>jQuery文本属性值</h2><p>普通元素内容 html()  // 相当于innerHTML</p>
<p>普通元素文本内容text()  // 相当于innerTEXT</p>
<p>获取表单的值   val()</p>
<p>案例：购物车案例模块</p>
<!--增减商品数量分析-->

<!--修改商品小计  返回指定父元素-->

<h2 id="jQuery元素操作"><a href="#jQuery元素操作" class="headerlink" title="jQuery元素操作"></a>jQuery元素操作</h2><h3 id="遍历元素"><a href="#遍历元素" class="headerlink" title="遍历元素"></a>遍历元素</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span>domEle</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	xxx<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol>
<li>each() 方法遍历匹配每一个元素，index是每个元素的索引号；domEle是每个DOM元素对象（需要转化为jQuery对象）</li>
</ol>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span>element</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	xxx<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol>
<li>$.each() 方法可用于遍历任何对象，主要用于数据处理。index是每个元素的索引号；element为遍历内容    </li>
</ol>
<p>案例：购物车案例模块-计算总和</p>
<h3 id="创建元素"><a href="#创建元素" class="headerlink" title="创建元素"></a>创建元素</h3><p><code>$("&lt;li&gt;&lt;/li&gt;");</code>  </p>
<p>内部后面添加   append    // 父子关系</p>
<p>内部前面添加  prepend</p>
<p>外部后面添加   after    //  兄弟关系</p>
<p>外部前面添加  before</p>
<p>删除元素</p>
<ul>
<li>remove()   //  删除匹配的元素</li>
<li>empty()   //  删除匹配的元素集合中的所有子节点</li>
<li>html(“ “)   // 清空匹配的元素内容</li>
</ul>
<p>案例：购物车案例模块-删除商品模块</p>
<p>案例：购物车案例模块-选中商品添加背景</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>前端代码规范</title>
    <url>/post/574f280b.html</url>
    <content><![CDATA[<h1 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>欢迎使用品优购代码规范， 这个是我借鉴京东前端代码规范，组织的品优购内部规范。旨在增强团队开发协作、提高代码质量和打造开发基石的编码规范，</p>
<p>以下规范是团队基本约定的内容，必须严格遵循。</p>
<h4 id="HTML规范"><a href="#HTML规范" class="headerlink" title="HTML规范"></a>HTML规范</h4><p>基于 <a href="http://www.w3.org/">W3C</a>、<a href="https://developer.apple.com/">苹果开发者</a> 等官方文档，并结合团队业务和开发过程中总结的规范约定，让页面HTML代码更具语义性。</p>
<h4 id="图片规范"><a href="#图片规范" class="headerlink" title="图片规范"></a>图片规范</h4><p>了解各种图片格式特性，根据特性制定图片规范，包括但不限于图片的质量约定、图片引入方式、图片合并处理等，旨在从图片层面优化页面性能。</p>
<h4 id="CSS规范"><a href="#CSS规范" class="headerlink" title="CSS规范"></a>CSS规范</h4><p>统一规范团队 CSS 代码书写风格和使用 CSS 预编译语言语法风格，提供常用媒体查询语句和浏览器私有属性引用，并从业务层面统一规范常用模块的引用。</p>
<h4 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h4><p>从 <code>目录</code>、<code>图片</code>、<code>HTML/CSS文件</code>、<code>ClassName</code> 的命名等层面约定规范团队的命名习惯，增强团队代码的可读性。</p>
<h2 id="2-HTML-规范"><a href="#2-HTML-规范" class="headerlink" title="2. HTML 规范"></a>2. HTML 规范</h2><h3 id="DOCTYPE-声明"><a href="#DOCTYPE-声明" class="headerlink" title="DOCTYPE 声明"></a>DOCTYPE 声明</h3><p>HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>HTML5标准模版</strong></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>HTML5标准模版<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="页面语言lang"><a href="#页面语言lang" class="headerlink" title="页面语言lang"></a>页面语言lang</h3><p>推荐使用属性值 <code>cmn-Hans-CN</code>（简体, 中国大陆），但是考虑浏览器和操作系统的兼容性，目前仍然使用 <code>zh-CN</code> 属性值</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;html lang="zh-CN"&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>更多地区语言参考：</p>
<pre class="line-numbers language-none"><code class="language-none">zh-SG 中文 (简体, 新加坡)   对应 cmn-Hans-SG 普通话 (简体, 新加坡)
zh-HK 中文 (繁体, 香港)     对应 cmn-Hant-HK 普通话 (繁体, 香港)
zh-MO 中文 (繁体, 澳门)     对应 cmn-Hant-MO 普通话 (繁体, 澳门)
zh-TW 中文 (繁体, 台湾)     对应 cmn-Hant-TW 普通话 (繁体, 台湾)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="charset-字符集合"><a href="#charset-字符集合" class="headerlink" title="charset 字符集合"></a>charset 字符集合</h3><p>一般情况下统一使用 “UTF-8” 编码</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;meta charset="UTF-8"&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>由于历史原因，有些业务可能会使用 “GBK” 编码</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;meta charset="GBK"&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>请尽量统一写成标准的 “UTF-8”，不要写成 “utf-8” 或 “utf8” 或 “UTF8”。根据 <a href="http://www.ietf.org/rfc/rfc3629">IETF对UTF-8的定义</a>，其编码标准的写法是 “UTF-8”；而 UTF8 或 utf8 的写法只是出现在某些编程系统中，如 .NET framework 的类 System.Text.Encoding 中的一个属性名就叫 UTF8。</p>
<h3 id="书写风格"><a href="#书写风格" class="headerlink" title="书写风格"></a>书写风格</h3><h4 id="HTML代码大小写"><a href="#HTML代码大小写" class="headerlink" title="HTML代码大小写"></a>HTML代码大小写</h4><p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class="demo"&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class="DEMO"&gt;&lt;/div&gt;
	
&lt;DIV CLASS="DEMO"&gt;&lt;/DIV&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="类型属性"><a href="#类型属性" class="headerlink" title="类型属性"></a>类型属性</h3><p>不需要为 CSS、JS 指定类型属性，HTML5 中默认已包含</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;link rel="stylesheet" href="" &gt;
&lt;script src=""&gt;&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;link rel="stylesheet" type="text/css" href="" &gt;
&lt;script type="text/javascript" src="" &gt;&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><ul>
<li>元素属性值使用双引号语法</li>
<li>元素属性值可以写上的都写上</li>
</ul>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;input type="text"&gt;
&lt;input type="radio" name="name" checked="checked" &gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;input type=text&gt;	
&lt;input type='text'&gt;
&lt;input type="radio" name="name" checked &gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="特殊字符引用"><a href="#特殊字符引用" class="headerlink" title="特殊字符引用"></a>特殊字符引用</h3><p>文本可以和字符引用混合出现。这种方法可以用来转义在文本中不能合法出现的字符。</p>
<p>在 HTML 中不能使用小于号 “&lt;” 和大于号 “&gt;”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;a href="#"&gt;more&gt;&gt;&lt;/a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;a href="#"&gt;more&gt;&gt;&lt;/a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class="jdc"&gt;
    &lt;a href="#"&gt;&lt;/a&gt;
&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="代码嵌套"><a href="#代码嵌套" class="headerlink" title="代码嵌套"></a>代码嵌套</h3><p>元素嵌套规范，每个块状元素独立一行，内联元素可选</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div&gt;
    &lt;h1&gt;&lt;/h1&gt;
    &lt;p&gt;&lt;/p&gt;
&lt;/div&gt;	
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div&gt;
    &lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;	
&lt;p&gt; 
    &lt;span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;/span&gt;
&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>段落元素与标题元素只能嵌套内联元素</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;h1&gt;&lt;span&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;h1&gt;&lt;div&gt;&lt;/div&gt;&lt;/h1&gt;
&lt;p&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="3-图片规范"><a href="#3-图片规范" class="headerlink" title="3. 图片规范"></a>3. 图片规范</h2><h3 id="内容图"><a href="#内容图" class="headerlink" title="内容图"></a>内容图</h3><p>内容图多以商品图等照片类图片形式存在，颜色较为丰富，文件体积较大</p>
<ul>
<li>优先考虑 JPEG 格式，条件允许的话优先考虑 WebP 格式</li>
<li>尽量不使用PNG格式，PNG8 色位太低，PNG24 压缩率低，文件体积大</li>
<li><strong>PC平台单张的图片的大小不应大于 200KB。</strong></li>
</ul>
<h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>背景图多为图标等颜色比较简单、文件体积不大、起修饰作用的图片</p>
<ul>
<li>PNG 与 GIF 格式，优先考虑使用 PNG 格式,PNG格式允许更多的颜色并提供更好的压缩率</li>
<li>图像颜色比较简单的，如纯色块线条图标，优先考虑使用 PNG8 格式，避免不使用 JPEG 格式</li>
<li>图像颜色丰富而且图片文件不太大的（40KB 以下）或有半透明效果的优先考虑 PNG24 格式</li>
<li>图像颜色丰富而且文件比较大的（40KB - 200KB）优先考虑 JPEG 格式</li>
<li>条件允许的，优先考虑 WebP 代替 PNG 和 JPEG 格式</li>
</ul>
<h2 id="4-CSS规范"><a href="#4-CSS规范" class="headerlink" title="4. CSS规范"></a>4. CSS规范</h2><h3 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h3><p>样式书写一般有两种：一种是紧凑格式 (Compact)</p>
<pre class="line-numbers language-none"><code class="language-none">.jdc{ display: block;width: 50px;}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>一种是展开格式（Expanded）</p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    display: block;
    width: 50px;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>团队约定</strong></p>
<p>统一使用展开格式书写样式</p>
<h3 id="代码大小写"><a href="#代码大小写" class="headerlink" title="代码大小写"></a>代码大小写</h3><p>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写。</p>
<pre class="line-numbers language-none"><code class="language-none">/* 推荐 */
.jdc{
	display:block;
}
	
/* 不推荐 */
.JDC{
	DISPLAY:BLOCK;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><ul>
<li>尽量少用通用选择器 <code>*</code></li>
<li>不使用 ID 选择器</li>
<li>不使用无具体语义定义的标签选择器</li>
</ul>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 推荐 */</span>
<span class="token selector">.jdc</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.jdc li</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.jdc li p</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">/* 不推荐 */</span>
<span class="token selector">*</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">#jdc</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token selector">.jdc div</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="代码缩进-1"><a href="#代码缩进-1" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    width: 100%;
    height: 100%;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><p>每个属性声明末尾都要加分号；</p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    width: 100%;
    height: 100%;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="代码易读性"><a href="#代码易读性" class="headerlink" title="代码易读性"></a>代码易读性</h3><p>左括号与类名之间一个空格，冒号与属性值之间一个空格</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">.jdc { 
    width: 100%; 
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">.jdc{ 
    width:100%;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>逗号分隔的取值，逗号之后一个空格</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    box-shadow: 1px 1px 1px #333, 2px 2px 2px #ccc;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    box-shadow: 1px 1px 1px #333,2px 2px 2px #ccc;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>为单个css选择器或新申明开启新行</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.jdc, 
.jdc_logo, 
.jdc_hd</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #ff0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.nav</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.jdc,jdc_logo,.jdc_hd</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #ff0<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token selector">.nav</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>颜色值 <code>rgb()</code> <code>rgba()</code> <code>hsl()</code> <code>hsla()</code> <code>rect()</code> 中不需有空格，且取值不要带有不必要的 0</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    color: rgba(255,255,255,.5);
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    color: rgba( 255, 255, 255, 0.5 );
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>属性值十六进制数值能用简写的尽量用简写</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-none"><code class="language-none">.jdc {
    color: #fff;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.jdc</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>不要为 <code>0</code> 指明单位</p>
<p><em>推荐：</em></p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.jdc</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><em>不推荐：</em></p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.jdc</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0px 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="属性值引号"><a href="#属性值引号" class="headerlink" title="属性值引号"></a>属性值引号</h3><p>css属性值需要用到引号时，统一使用单引号</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 推荐 */</span>
<span class="token selector">.jdc</span> <span class="token punctuation">{</span> 
	<span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Hiragino Sans GB'</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 不推荐 */</span>
<span class="token selector">.jdc</span> <span class="token punctuation">{</span> 
	<span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Hiragino Sans GB"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="属性书写顺序"><a href="#属性书写顺序" class="headerlink" title="属性书写顺序"></a>属性书写顺序</h3><p>建议遵循以下顺序：</p>
<ol>
<li>布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式）</li>
<li>自身属性：width / height / margin / padding / border / background</li>
<li>文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li>
<li>其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li>
</ol>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.jdc</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> <span class="token string">'Helvetica Neue'</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">-o-border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">-ms-border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://www.mozilla.org/css/base/content.css">mozilla官方属性顺序推荐</a></p>
<h2 id="命名规范-1"><a href="#命名规范-1" class="headerlink" title="命名规范"></a>命名规范</h2><p>由历史原因及个人习惯引起的 DOM 结构、命名不统一，导致不同成员在维护同一页面时，效率低下，迭代、维护成本极高。</p>
<h3 id="目录命名"><a href="#目录命名" class="headerlink" title="目录命名"></a>目录命名</h3><ul>
<li>项目文件夹：pinyougou</li>
<li>样式文件夹：css</li>
<li>脚本文件夹：js</li>
<li>样式类图片文件夹：img</li>
<li>产品类图片文件夹： upload</li>
<li>字体类文件夹： fonts</li>
</ul>
<h3 id="ClassName命名"><a href="#ClassName命名" class="headerlink" title="ClassName命名"></a>ClassName命名</h3><p>ClassName的命名应该尽量精短、明确，必须以<strong>字母开头命名</strong>，且<strong>全部字母为小写</strong>，单词之间<strong>统一使用下划线</strong> “_” 连接</p>
<p>.nav_top</p>
<h4 id="常用命名推荐"><a href="#常用命名推荐" class="headerlink" title="常用命名推荐"></a>常用命名推荐</h4><p><strong>注意</strong>：ad、banner、gg、guanggao 等有机会和广告挂勾的字眠不建议直接用来做ClassName，因为有些浏览器插件（Chrome的广告拦截插件等）会直接过滤这些类名，因此</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class="ad"&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这种广告的英文或拼音类名不应该出现</p>
<p>另外，<strong>敏感不和谐字眼</strong>也不应该出现，如：</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class="fuck"&gt;&lt;/div&gt;
&lt;div class="jer"&gt;&lt;/div&gt;
&lt;div class="sm"&gt;&lt;/div&gt;
&lt;div class="gcd"&gt;&lt;/div&gt; 
&lt;div class="ass"&gt;&lt;/div&gt; 
&lt;div class="KMT"&gt;&lt;/div&gt; 
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>ClassName</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>about</td>
<td>关于</td>
</tr>
<tr>
<td>account</td>
<td>账户</td>
</tr>
<tr>
<td>arrow</td>
<td>箭头图标</td>
</tr>
<tr>
<td>article</td>
<td>文章</td>
</tr>
<tr>
<td>aside</td>
<td>边栏</td>
</tr>
<tr>
<td>audio</td>
<td>音频</td>
</tr>
<tr>
<td>avatar</td>
<td>头像</td>
</tr>
<tr>
<td>bg,background</td>
<td>背景</td>
</tr>
<tr>
<td>bar</td>
<td>栏（工具类）</td>
</tr>
<tr>
<td>branding</td>
<td>品牌化</td>
</tr>
<tr>
<td>crumb,breadcrumbs</td>
<td>面包屑</td>
</tr>
<tr>
<td>btn,button</td>
<td>按钮</td>
</tr>
<tr>
<td>caption</td>
<td>标题，说明</td>
</tr>
<tr>
<td>category</td>
<td>分类</td>
</tr>
<tr>
<td>chart</td>
<td>图表</td>
</tr>
<tr>
<td>clearfix</td>
<td>清除浮动</td>
</tr>
<tr>
<td>close</td>
<td>关闭</td>
</tr>
<tr>
<td>col,column</td>
<td>列</td>
</tr>
<tr>
<td>comment</td>
<td>评论</td>
</tr>
<tr>
<td>community</td>
<td>社区</td>
</tr>
<tr>
<td>container</td>
<td>容器</td>
</tr>
<tr>
<td>content</td>
<td>内容</td>
</tr>
<tr>
<td>copyright</td>
<td>版权</td>
</tr>
<tr>
<td>current</td>
<td>当前态，选中态</td>
</tr>
<tr>
<td>default</td>
<td>默认</td>
</tr>
<tr>
<td>description</td>
<td>描述</td>
</tr>
<tr>
<td>details</td>
<td>细节</td>
</tr>
<tr>
<td>disabled</td>
<td>不可用</td>
</tr>
<tr>
<td>entry</td>
<td>文章，博文</td>
</tr>
<tr>
<td>error</td>
<td>错误</td>
</tr>
<tr>
<td>even</td>
<td>偶数，常用于多行列表或表格中</td>
</tr>
<tr>
<td>fail</td>
<td>失败（提示）</td>
</tr>
<tr>
<td>feature</td>
<td>专题</td>
</tr>
<tr>
<td>fewer</td>
<td>收起</td>
</tr>
<tr>
<td>field</td>
<td>用于表单的输入区域</td>
</tr>
<tr>
<td>figure</td>
<td>图</td>
</tr>
<tr>
<td>filter</td>
<td>筛选</td>
</tr>
<tr>
<td>first</td>
<td>第一个，常用于列表中</td>
</tr>
<tr>
<td>footer</td>
<td>页脚</td>
</tr>
<tr>
<td>forum</td>
<td>论坛</td>
</tr>
<tr>
<td>gallery</td>
<td>画廊</td>
</tr>
<tr>
<td>group</td>
<td>模块，清除浮动</td>
</tr>
<tr>
<td>header</td>
<td>页头</td>
</tr>
<tr>
<td>help</td>
<td>帮助</td>
</tr>
<tr>
<td>hide</td>
<td>隐藏</td>
</tr>
<tr>
<td>hightlight</td>
<td>高亮</td>
</tr>
<tr>
<td>home</td>
<td>主页</td>
</tr>
<tr>
<td>icon</td>
<td>图标</td>
</tr>
<tr>
<td>info,information</td>
<td>信息</td>
</tr>
<tr>
<td>last</td>
<td>最后一个，常用于列表中</td>
</tr>
<tr>
<td>links</td>
<td>链接</td>
</tr>
<tr>
<td>login</td>
<td>登录</td>
</tr>
<tr>
<td>logout</td>
<td>退出</td>
</tr>
<tr>
<td>logo</td>
<td>标志</td>
</tr>
<tr>
<td>main</td>
<td>主体</td>
</tr>
<tr>
<td>menu</td>
<td>菜单</td>
</tr>
<tr>
<td>meta</td>
<td>作者、更新时间等信息栏，一般位于标题之下</td>
</tr>
<tr>
<td>module</td>
<td>模块</td>
</tr>
<tr>
<td>more</td>
<td>更多（展开）</td>
</tr>
<tr>
<td>msg,message</td>
<td>消息</td>
</tr>
<tr>
<td>nav,navigation</td>
<td>导航</td>
</tr>
<tr>
<td>next</td>
<td>下一页</td>
</tr>
<tr>
<td>nub</td>
<td>小块</td>
</tr>
<tr>
<td>odd</td>
<td>奇数，常用于多行列表或表格中</td>
</tr>
<tr>
<td>off</td>
<td>鼠标离开</td>
</tr>
<tr>
<td>on</td>
<td>鼠标移过</td>
</tr>
<tr>
<td>output</td>
<td>输出</td>
</tr>
<tr>
<td>pagination</td>
<td>分页</td>
</tr>
<tr>
<td>pop,popup</td>
<td>弹窗</td>
</tr>
<tr>
<td>preview</td>
<td>预览</td>
</tr>
<tr>
<td>previous</td>
<td>上一页</td>
</tr>
<tr>
<td>primary</td>
<td>主要</td>
</tr>
<tr>
<td>progress</td>
<td>进度条</td>
</tr>
<tr>
<td>promotion</td>
<td>促销</td>
</tr>
<tr>
<td>rcommd,recommendations</td>
<td>推荐</td>
</tr>
<tr>
<td>reg,register</td>
<td>注册</td>
</tr>
<tr>
<td>save</td>
<td>保存</td>
</tr>
<tr>
<td>search</td>
<td>搜索</td>
</tr>
<tr>
<td>secondary</td>
<td>次要</td>
</tr>
<tr>
<td>section</td>
<td>区块</td>
</tr>
<tr>
<td>selected</td>
<td>已选</td>
</tr>
<tr>
<td>share</td>
<td>分享</td>
</tr>
<tr>
<td>show</td>
<td>显示</td>
</tr>
<tr>
<td>sidebar</td>
<td>边栏，侧栏</td>
</tr>
<tr>
<td>slide</td>
<td>幻灯片，图片切换</td>
</tr>
<tr>
<td>sort</td>
<td>排序</td>
</tr>
<tr>
<td>sub</td>
<td>次级的，子级的</td>
</tr>
<tr>
<td>submit</td>
<td>提交</td>
</tr>
<tr>
<td>subscribe</td>
<td>订阅</td>
</tr>
<tr>
<td>subtitle</td>
<td>副标题</td>
</tr>
<tr>
<td>success</td>
<td>成功（提示）</td>
</tr>
<tr>
<td>summary</td>
<td>摘要</td>
</tr>
<tr>
<td>tab</td>
<td>标签页</td>
</tr>
<tr>
<td>table</td>
<td>表格</td>
</tr>
<tr>
<td>txt,text</td>
<td>文本</td>
</tr>
<tr>
<td>thumbnail</td>
<td>缩略图</td>
</tr>
<tr>
<td>time</td>
<td>时间</td>
</tr>
<tr>
<td>tips</td>
<td>提示</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
</tr>
<tr>
<td>video</td>
<td>视频</td>
</tr>
<tr>
<td>wrap</td>
<td>容器，包，一般用于最外层</td>
</tr>
<tr>
<td>wrapper</td>
<td>容器，包，一般用于最外层</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>CCS</tag>
      </tags>
  </entry>
  <entry>
    <title>心之语</title>
    <url>/post/acd318ce.html</url>
    <content><![CDATA[<p>   你是精灵，生长自我的灵魂。<br>   许多年前，你走进我的梦境。我看的清楚记得分明。梦醒时分，我看到一束阳光，从瓦缝中斜斜的泻下来。在那最明亮的光束中，有无数的精灵。<br>    那是你吗，不可捉摸的精灵？</p>
<p>   在无数个夜晚，我辗转反侧。我听见了万声枪响，所听不见你的声音。我默默地祈祷，请求你走进我的梦境，让我再次看的分明。可我总是睡意全无，彻夜无眠。<br>   梦又不成灯已尽，徒辛苦。</p>
<p>   无数个黎明，我早早的起来，打开厚重的帷幔，欢迎你，我看到了无数的光影，看到了闪烁的星星，看到了静穆中慢慢升起的太阳，看到了他的鲜艳和红润，但我没有看到你，我的精灵。</p>
<p>   于是我去流浪，寻找你的身影。<br>   许多夕阳西下十分，我看到夕阳渐渐西沉，感受到了人们回家的兴奋，我嗅到了米饭的香味，听到了牛羊归圈的喧腾。<br>   我想停驻，却看不到你的身影。</p>
<p>   我很寂寞，路人对我不屑。<br>   我很疲惫，我知道我肯定满脸风尘。<br>   我大笑，对你差一点失去了信心，但你的灵光照进了我的心灵，如同晚霞的宁静。<br>   我想，你时刻在保佑着我，让我一次又一次的新生。</p>
<p>   我很贫困，像个乞丐，似乎只有可怜的自尊。<br>   我想象你的住处，它肯定是座宫殿。金碧辉煌，美轮美奂。<br>   我轻轻的走近你，匍匐着献上我的虔诚。<br>   请不要轻视我，因为我是你最忠实的臣民。</p>
<p>  我用一生的幸福来寻觅你。<br>  许多个普通的日子，人们在灯前月下谈笑，在灯红酒绿中欢欣，只有我在踽踽独行。<br>  许多个普通的日子，当初升的太阳照亮了紫色的山岗，惬意的写满朴实的脸。只有寻寻觅觅，愁眉不展。</p>
<p>  朋友说我是自寻烦恼，妻子说你是美丽的梦幻，但我坚信你的存在，想象着你烂漫的容颜，你总是触手可及，却又忽儿不见。<br>  你是精灵，魅惑的魔仙。</p>
<p>   有时，我真的很疲惫，我想停下，却又心有不甘。<br>   因为，我坚信你就在我的身边，我几乎可以参透你的秘密，抵达真理的彼岸。</p>
<p>   夏日的阴霾总是很短暂，狂风骤雨过后，阳光会更加灿烂，快乐的蜻蜓定会到来，飞舞在我阳光的庭院。<br>   我等待，等待你的出现。<br>   你呀 ——就是我晴朗的天。</p>
<p>   我踏遍千山万水，只希望得到你的荣幸。<br>   我一无所有，且盼望你的降临，我只能奉献我的热爱，我的真诚，还有我的心。</p>
<p>   当人世充满理性，当梦想成为天真，你的降临便是圣灵的再生。<br>   或许有一天，我老了，老得再也走不动了。我会静静坐在我的屋子里，点亮我的灯，静静听着你的足音。<br>   你走来，敲响了我的门……</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>散文集</tag>
      </tags>
  </entry>
  <entry>
    <title>背包九讲</title>
    <url>/post/e45f505b.html</url>
    <content><![CDATA[<h2 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h2><p>有 <em>N</em> 件物品和一个容量是 <em>V</em> 的背包。每件物品只能使用一次。</p>
<p>第 <em>i</em> 件物品的体积是 <em>vi</em>，价值是 <em>wi</em>。</p>
<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。<br>输出最大价值</p>
<p>闫氏DP分析法：</p>
<p>状态表示： <code>f(i,j)</code> 所有只考虑前I个物体且总体积不超过j的集合</p>
<p>属性：max</p>
<p>状态计算：可以将集合划分为所有==不选==第i个物品的方案和所有==选择==第i个物品的方案<br>$$<br>f(i,j) = max(f(i-1,j) ,f(i-1,j-v)+w)<br>$$</p>
<p><img src="https://cdn.linxueya.cn/img/backpack-01.png"></p>
<p>朴素解法：</p>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;
#include&lt;vector&gt;

using namespace std;

int dp[1010][1010];

int main(){
    int n,m;
    cin&gt;&gt;n&gt;&gt;m;
    for(int i=1;i&lt;=n;i++){
        int v,w;
        cin&gt;&gt;v&gt;&gt;w;
        for(int j=0;j&lt;=m;j++){
            dp[i][j] = dp[i-1][j];
            if(j&gt;=v)
                dp[i][j] = max(dp[i][j],dp[i-1][j-v]+w);
        }
    }
    cout&lt;&lt; dp[n][m]&lt;&lt;endl;
    return 0;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>优化解法：</p>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;
#include&lt;vector&gt;
using namespace std;
int dp[1010];

int main(){
    int n,m;
    cin&gt;&gt;n&gt;&gt;m;
    for(int i=0;i&lt;n;i++){
        int v,w;
        cin&gt;&gt;v&gt;&gt;w;
        // 对于一个二维矩阵，i表示行，j表示列，
        // 已知j-v &lt; j 
        // 如果j从大到小更新，则dp[j-v]表示dp[i-1][j-v]
        for(int j=m;j&gt;=v;j--)
            dp[j] = max(dp[j],dp[j-v]+w);
    }
    cout&lt;&lt; dp[m]&lt;&lt;endl;
    return 0;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<div class="note info">在优化过程中，只考虑程序的等价变换，和之前的状态表示无关。</div>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>BFS算法模板</title>
    <url>/post/ef821204.html</url>
    <content><![CDATA[<p>BFS使用队列，把每个还没有搜索到的点依次放入队列，然后再弹出队列的头部元素当做当前遍历点。BFS总共有两个模板：</p>
<ol>
<li>如果不需要确定当前遍历到了哪一层，BFS模板如下。</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">while queue 不空：
    cur = queue.pop()
    if cur 有效且未被访问过：
        进行处理
    for 节点 in cur 的所有相邻节点：
        if 该节点有效：
            queue.push(该节点)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>如果要确定当前遍历到了哪一层，BFS模板如下。<br>这里增加了level表示当前遍历到二叉树中的哪一层了，也可以理解为在一个图中，现在已经走了多少步了。size表示在当前遍历层有多少个元素，也就是队列中的元素数，我们把这些元素一次性遍历完，即把当前层的所有元素都向外走了一步。</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">level = 0
while queue 不空：
    size = queue.size()
    while (size --) {
        cur = queue.pop()
        if cur 有效且未被访问过：
            进行处理
        for 节点 in cur的所有相邻节点：
            if 该节点有效：
                queue.push(该节点)
    }
    level ++;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>迭代</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript面向对象</title>
    <url>/post/f818a4a.html</url>
    <content><![CDATA[<ul>
<li><input disabled="" type="checkbox"> 能够说出什么是面向对象</li>
<li><input disabled="" type="checkbox"> 能够说出类和对象的关系</li>
<li><input disabled="" type="checkbox"> 能够使用class创建自定义类</li>
<li><input disabled="" type="checkbox"> 能够说出什么是继承</li>
</ul>
<h2 id="面向对象编程介绍"><a href="#面向对象编程介绍" class="headerlink" title="面向对象编程介绍"></a>面向对象编程介绍</h2><p>面向过程编程：分析出解决问题所需要的步骤，然后用函数把这些步骤一步步实现，使用时再依次调用。</p>
<p>面向对象编程：把事务分解成一个个对象，然后由对象之间分工与合作</p>
<p><img src="https://cdn.linxueya.cn/img/jsobject-dif.png"></p>
<h2 id="ES6中的类和对象"><a href="#ES6中的类和对象" class="headerlink" title="ES6中的类和对象"></a>ES6中的类和对象</h2><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>在JavaScript中，对象是一组无序的相关属性和方法的集合，所有的食物都是对象。对象是由属性和方法组成的。</p>
<h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>类抽象了对象的公共部分，它泛指某一大类。对象特指某一个，通过类实例化一个具体的对象。</p>
<p>创建实例： <code>var xxx = new name();</code></p>
<p>constructor()方法是类的构造函数，用于传递参数，返回实例对象。只要new生成实例，就会自动调用这个函数。</p>
<div class="note info">注意类必须使用new实例化对象；创建类不需要小括号，new生成类需要小括号；类里面方法不需要加function</div>

<h2 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h2><p>子类会继承父类的一些属性和方法。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>  <span class="token comment">//子类继承父类</span>
    
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>==super关键字==用于调用父类中的构造函数和普通函数</p>
<div class="note info">注意super必须在this之前被调用</div>

<p>ES6中的类和对象：</p>
<ul>
<li><p>在ES6中没有变量提升，所以必须先定义类，然后才能通过实例化类的对象</p>
</li>
<li><p>类中共有属性和方法一定要加this使用</p>
</li>
<li><p>方法中this指向 ==调用者==，constructor中的this指向实例对象</p>
<p>案例：面向对象版tab栏切换</p>
</li>
</ul>
<p>案例效果: <a href="file:///D:/Master/Code/WebProjects/itcast/ES6/JSobject/tab/index.html">GO</a></p>
<p><img src="https://cdn.linxueya.cn/img/jsobject-tab.png"></p>
<!--注意this指向;insertAdjacentHTML ,支持字符串追加;删除选中转态li,前一个li自动处于选定状态;非选中状态li,原来section不变;双击生成文本框,失去焦点关闭-->]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery事件</title>
    <url>/post/f7b3a86d.html</url>
    <content><![CDATA[<ul>
<li><input disabled="" type="checkbox"> 能够说出四种常见的注册事件</li>
<li><input disabled="" type="checkbox"> 能够说出on绑定事件的优势</li>
<li><input disabled="" type="checkbox"> 能够说出jQuery事件委派的优点及方式</li>
<li><input disabled="" type="checkbox"> 能够说出绑定事件与解绑事件</li>
<li><input disabled="" type="checkbox"> 能够说出jQuery对象的拷贝</li>
<li><input disabled="" type="checkbox"> 能够说出jQuery多库共存的两种方法</li>
<li><input disabled="" type="checkbox"> 能够使用jQuery插件</li>
</ul>
<h2 id="jQuery事件注册"><a href="#jQuery事件注册" class="headerlink" title="jQuery事件注册"></a>jQuery事件注册</h2><h3 id="单个事件注册"><a href="#单个事件注册" class="headerlink" title="单个事件注册"></a>单个事件注册</h3><p>element.事件(function(){ })</p>
<p>事件类型和DOM 类似</p>
<h2 id="jQuery事件处理"><a href="#jQuery事件处理" class="headerlink" title="jQuery事件处理"></a>jQuery事件处理</h2><h3 id="on-绑定事件"><a href="#on-绑定事件" class="headerlink" title="on()绑定事件"></a>on()绑定事件</h3><ol>
<li>可以绑定多个事件，多个事件处理程序</li>
</ol>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">mouseover</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">mouseout</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">click</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​    如果时间处理程序相同</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"mouseover mouseout"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"current"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li><p>可以事件委派操作。把原来加给子元素身上的事件绑定在父元素身上</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//  click 是绑定在ul身上的，但是触发的对象是ul里面的li</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ol"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    xxx<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

</li>
<li><p>可以给未来动态创建的元素绑定事件</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ol"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xxx<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> li <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;li&gt;我是后来创建的&lt;/li&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ol"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例：发布微博</p>
</li>
</ol>
<h3 id="off解绑事件"><a href="#off解绑事件" class="headerlink" title="off解绑事件"></a>off解绑事件</h3><p>off()方法可以移除通过on()方法添加的事件处理程序 </p>
<h3 id="自动触发事件"><a href="#自动触发事件" class="headerlink" title="自动触发事件"></a>自动触发事件</h3><p>有些事件希望被==自动触发==</p>
<ul>
<li>element.click( )</li>
</ul>
<h2 id="jQuery事件对象"><a href="#jQuery事件对象" class="headerlink" title="jQuery事件对象"></a>jQuery事件对象</h2><p>事件被触发，就会有事件对象的产生。</p>
<p>element.on(events,[selector],function(event){ })</p>
<p>阻止默认行为：event.preventDefault()</p>
<p>阻止冒泡： event.stopPropagation()</p>
<h2 id="jQuery拷贝对象"><a href="#jQuery拷贝对象" class="headerlink" title="jQuery拷贝对象"></a>jQuery拷贝对象</h2><p>语法：<code>$extend([deep],target,object1,[objectN])</code></p>
<ol>
<li>deep：如果为true则为==深拷贝==，默认为false，浅拷贝</li>
<li>target：要拷贝的随想</li>
<li>object：待拷贝的对象</li>
</ol>
<h2 id="jQuery多库共存"><a href="#jQuery多库共存" class="headerlink" title="jQuery多库共存"></a>jQuery多库共存</h2><p>jQuery使用$作为标识符，随着jQuery的流行，其他js库也会使用$作为标识符，这样一起使用会引起冲突</p>
<p>解决方案：</p>
<ol>
<li>把里面的$符号统一改为jQuery。// jQuery(“div”)</li>
<li>将jQuery变量定义成新的名称， //  $.noConflict()  var xxx = $.noConflict();</li>
</ol>
<h2 id="jQuery插件"><a href="#jQuery插件" class="headerlink" title="jQuery插件"></a>jQuery插件</h2><p>插件常用网站</p>
<p><a href="https://www.jq22.com/">https://www.jq22.com/</a></p>
<p><a href="http://www.htmleaf.com/">http://www.htmleaf.com/</a></p>
<p>jQuery插件使用步骤</p>
<ol>
<li>引入jQuery文件和插件文件</li>
<li>复制相关html、css和js文件</li>
</ol>
<h3 id="jQuery插件-瀑布流"><a href="#jQuery插件-瀑布流" class="headerlink" title="jQuery插件-瀑布流"></a>jQuery插件-瀑布流</h3><h3 id="jQuery插件-懒加载"><a href="#jQuery插件-懒加载" class="headerlink" title="jQuery插件-懒加载"></a>jQuery插件-懒加载</h3><p>图片使用延迟加载可以提高网页下载速度，帮助减轻服务器负载。当使用jQuery插件库easylazyload时，js引入文件和调用必须写到DOM后面</p>
<h3 id="jQuery插件-全屏滚动"><a href="#jQuery插件-全屏滚动" class="headerlink" title="jQuery插件-全屏滚动"></a>jQuery插件-全屏滚动</h3><p>fullpage.js</p>
<h3 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h3><p>​    Bootstrap是 Twitter 公司设计的基于HTML、CSS、JavaScript开发的简洁、直观、强悍的前端开发框架，他依靠jQuery实现，且支持响应式布局，使得 Web 开发更加方便快捷。</p>
<p>​    Bootstrap组件使用非常方便:  1.引入bootstrap相关css和js        2.去官网复制html</p>
<h3 id="综合案例：toDolist"><a href="#综合案例：toDolist" class="headerlink" title="综合案例：toDolist"></a>综合案例：toDolist</h3><!--读取数据 ->  存储数据  ->  渲染数据-->

<!--先清空ol的内容，再进行追加-->

<!--删除操作：获取存储->修改数据->保存数据->渲染-->

<h2 id="jQuery尺寸位置操作"><a href="#jQuery尺寸位置操作" class="headerlink" title="jQuery尺寸位置操作"></a>jQuery尺寸位置操作</h2><h3 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h3><p><img src="https://cdn.linxueya.cn/img/jQuery-shape.png"></p>
<ul>
<li>以上参数为空，则是获取相应值；如果参数为数字，则是修改相应值</li>
</ul>
<h3 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h3><p>位置主要有三个：offset()、position()、scrollTop()/scrollLeft()</p>
<ul>
<li><p>offset()设置或获取元素偏移，该方法有两个属性left、top</p>
</li>
<li><p>position()用于获取带有定位的父级偏移，如果没有带定位的父级，则以文档为主</p>
</li>
</ul>
<p>案例：品优购电梯导航</p>
<p>点击导航栏，页面滚动；页面滚动，导航栏切换（这部分不明白）</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
</search>
